local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()


local Window = Rayfield:CreateWindow({
   Name = "NwokerrHub",
   LoadingTitle = "Universal Script!",
   LoadingSubtitle = "by Alxpeez",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "NwokerrHub"
   },
   Discord = {
      Enabled = false,
      Invite = "hXY7AJ7ckh", -- The Discord invite code, do not include discord.gg/
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Nwokerr Hub",
      Subtitle = "Key System",
      Note = "Join the discord (https://discord.gg/hXY7AJ7ckh)",
      FileName = "NwokerrKey",
      SaveKey = true,
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = "BestHub"
   }
})

local Tab = Window:CreateTab("Stage 1", 4483362458) -- Title, Image
local Section = Tab:CreateSection("Classic")

local Toggle = Tab:CreateToggle({
	Name = "Fly",
	CurrentValue = false,
	Flag = "Toggle2",
	Callback = function()
local fly_ThisCanBeNamedAnything = loadstring(game:HttpGet("https://raw.githubusercontent.com/Nicuse/RobloxScripts/main/BypassedFly.lua"))()

fly_ThisCanBeNamedAnything(true)
	end,
})

local Button = Tab:CreateButton({
	Name = "Noclip",
	Callback = function()
        local Noclip = nil
local Clip = nil

function noclip()
	Clip = false
	local function Nocl()
		if Clip == false and game.Players.LocalPlayer.Character ~= nil then
			for _,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
				if v:IsA('BasePart') and v.CanCollide and v.Name ~= floatName then
					v.CanCollide = false
				end
			end
		end
		wait(0.21) -- basic optimization
	end
	Noclip = game:GetService('RunService').Stepped:Connect(Nocl)
end

function clip()
	if Noclip then Noclip:Disconnect() end
	Clip = true
end

noclip() -- to toggle noclip() and clip()
end,
})

local Slider = Tab:CreateSlider({
   Name = "JumpPower",
   Range = {50, 400},
   Increment = 10,
   Suffix = "JumpPower",
   CurrentValue = 50,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(s)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = s
   end,
})

local Slider = Tab:CreateSlider({
	Name = "Walkspeed",
	Range = {16, 300},
	Increment = 10,
	Suffix = "Walkspeed",
	CurrentValue = 16,
	Flag = "Slider1",
    Callback = function(k)
	    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = k
	end,
})

local Button = Tab:CreateButton({
   Name = "Self-Kick",
   Callback = function()
        game.Players.LocalPlayer:Kick("Self-Kick By Alxpeez")
   end,
})

local Button = Tab:CreateButton({
	Name = "Infinite Yield",
	Callback = function()
	    loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source",true))()
	end,
})

local Button = Tab:CreateButton({
	Name = "Rejoin",
	Callback = function()
local ts = game:GetService("TeleportService")
local p = game:GetService("Players").LocalPlayer

ts:Teleport(game.PlaceId, p)
end,
})

local Button = Tab:CreateButton({
	Name = "Server Hop",
	Callback = function()
local module = loadstring(game:HttpGet"https://raw.githubusercontent.com/LeoKholYt/roblox/main/lk_serverhop.lua")()

module:Teleport(game.PlaceId)
end,
})

local Toggle = Tab:CreateToggle({
	Name = "R6 Animations",
	CurrentValue = false,
	Flag = "Toggle7",
	Callback = function()
	    --[[
    fe nameless animations v3
    made by MyWorld#4430
    discord.gg/pYVHtSJmEY
    no hats needed, r15 supported
]]

if "myworld reanimate again" then
    --reanimate by MyWorld#4430 discord.gg/pYVHtSJmEY
    local Vector3_101 = Vector3.new(1, 0, 1)
    local netless_Y = Vector3.new(0, 25.1, 0)
    local function getNetlessVelocity(realPartVelocity) --change this if you have a better method
        local mag = realPartVelocity.Magnitude
        if (mag > 1) and (mag < 100) then
            local unit = realPartVelocity.Unit
            if (unit.Y > 0.25) or (unit.Y < -0.75) then
                return realPartVelocity * (25.1 / realPartVelocity.Y)
            end
            realPartVelocity = unit * 100
        end
        return (realPartVelocity * Vector3_101) + netless_Y
    end
    local simradius = "shp" --simulation radius (net bypass) method
    --"shp" - sethiddenproperty
    --"ssr" - setsimulationradius
    --false - disable
    local noclipAllParts = false --set it to true if you want noclip
    local antiragdoll = true --removes hingeConstraints and ballSocketConstraints from your character
    local newanimate = true --disables the animate script and enables after reanimation
    local discharscripts = true --disables all localScripts parented to your character before reanimation
    local R15toR6 = true --tries to convert your character to r6 if its r15
    local hatcollide = false --makes hats cancollide (credit to ShownApe) (works only with reanimate method 0)
    local humState16 = true --enables collisions for limbs before the humanoid dies (using hum:ChangeState)
    local addtools = false --puts all tools from backpack to character and lets you hold them after reanimation
    local hedafterneck = true --disable aligns for head and enable after neck or torso is removed
    local loadtime = game:GetService("Players").RespawnTime + 0.5 --anti respawn delay
    local method = 3 --reanimation method
    --methods:
    --0 - breakJoints (takes [loadtime] seconds to laod)
    --1 - limbs
    --2 - limbs + anti respawn
    --3 - limbs + breakJoints after [loadtime] seconds
    --4 - remove humanoid + breakJoints
    --5 - remove humanoid + limbs
    local alignmode = 2 --AlignPosition mode
    --modes:
    --1 - AlignPosition rigidity enabled true
    --2 - 2 AlignPositions rigidity enabled both true and false
    --3 - AlignPosition rigidity enabled false
    local flingpart = "HumanoidRootPart" --name of the part or the hat used for flinging
    --the fling function
    --usage: fling(target, duration, velocity)
    --target can be set to: basePart, CFrame, Vector3, character model or humanoid (flings at mouse.Hit if argument not provided))
    --duration (fling time in seconds) can be set to: a number or a string convertable to the number (0.5s if not provided),
    --velocity (fling part rotation velocity) can be set to a vector3 value (Vector3.new(20000, 20000, 20000) if not provided)
    
    local lp = game:GetService("Players").LocalPlayer
    local rs = game:GetService("RunService")
    local stepped = rs.Stepped
    local heartbeat = rs.Heartbeat
    local renderstepped = rs.RenderStepped
    local sg = game:GetService("StarterGui")
    local ws = game:GetService("Workspace")
    local cf = CFrame.new
    local v3 = Vector3.new
    local v3_0 = Vector3.zero
    local inf = math.huge
    
    local c = lp.Character
    
    if not (c and c.Parent) then
    	return
    end
    
    c:GetPropertyChangedSignal("Parent"):Connect(function()
        if not (c and c.Parent) then
    	    c = nil
    	end
    end)
    
    local function gp(parent, name, className)
    	if typeof(parent) == "Instance" then
    		for i, v in pairs(parent:GetChildren()) do
    			if (v.Name == name) and v:IsA(className) then
    				return v
    			end
    		end
    	end
    	return nil
    end
    
    if type(getNetlessVelocity) ~= "function" then
        getNetlessVelocity = nil
    end
    
    local function align(Part0, Part1)
    	Part0.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
    
    	local att0 = Instance.new("Attachment")
    	att0.Orientation = v3_0
    	att0.Position = v3_0
    	att0.Name = "att0_" .. Part0.Name
    	local att1 = Instance.new("Attachment")
    	att1.Orientation = v3_0
    	att1.Position = v3_0
    	att1.Name = "att1_" .. Part1.Name
    
    	if (alignmode == 1) or (alignmode == 2) then
    		local ape = Instance.new("AlignPosition", att0)
    		ape.ApplyAtCenterOfMass = false
    		ape.MaxForce = inf
    		ape.MaxVelocity = inf
    		ape.ReactionForceEnabled = false
    		ape.Responsiveness = 200
    		ape.Attachment1 = att1
    		ape.Attachment0 = att0
    		ape.Name = "AlignPositionRtrue"
    		ape.RigidityEnabled = true
    	end
    
    	if (alignmode == 2) or (alignmode == 3) then
    		local apd = Instance.new("AlignPosition", att0)
    		apd.ApplyAtCenterOfMass = false
    		apd.MaxForce = inf
    		apd.MaxVelocity = inf
    		apd.ReactionForceEnabled = false
    		apd.Responsiveness = 200
    		apd.Attachment1 = att1
    		apd.Attachment0 = att0
    		apd.Name = "AlignPositionRfalse"
    		apd.RigidityEnabled = false
    	end
    
    	local ao = Instance.new("AlignOrientation", att0)
    	ao.MaxAngularVelocity = inf
    	ao.MaxTorque = inf
    	ao.PrimaryAxisOnly = false
    	ao.ReactionTorqueEnabled = false
    	ao.Responsiveness = 200
    	ao.Attachment1 = att1
    	ao.Attachment0 = att0
    	ao.RigidityEnabled = false
    
    	if getNetlessVelocity then
    	    local vel = Part0.Velocity
    	    local velpart = Part1
            local rsteppedcon = renderstepped:Connect(function()
                Part0.Velocity = vel
            end)
            local heartbeatcon = heartbeat:Connect(function()
                vel = Part0.Velocity
                Part0.Velocity = getNetlessVelocity(velpart.Velocity)
            end)
            local attcon = nil
            Part0:GetPropertyChangedSignal("Parent"):Connect(function()
                if not (Part0 and Part0.Parent) then
                    rsteppedcon:Disconnect()
                    heartbeatcon:Disconnect()
                    attcon:Disconnect()
                end
            end)
            attcon = att1:GetPropertyChangedSignal("Parent"):Connect(function()
    	        if not (att1 and att1.Parent) then
    	            attcon:Disconnect()
                    velpart = Part0
    	        else
    	            velpart = att1.Parent
    	            if not velpart:IsA("BasePart") then
    	                velpart = Part0
    	            end
    	        end
    	    end)
    	end
    	
    	att0.Parent = Part0
        att1.Parent = Part1
    end
    
    local function respawnrequest()
    	local ccfr = ws.CurrentCamera.CFrame
    	local c = lp.Character
    	lp.Character = nil
    	lp.Character = c
    	local con = nil
    	con = ws.CurrentCamera.Changed:Connect(function(prop)
    	    if (prop ~= "Parent") and (prop ~= "CFrame") then
    	        return
    	    end
    	    ws.CurrentCamera.CFrame = ccfr
    	    con:Disconnect()
        end)
    end
    
    local destroyhum = (method == 4) or (method == 5)
    local breakjoints = (method == 0) or (method == 4)
    local antirespawn = (method == 0) or (method == 2) or (method == 3)
    
    hatcollide = hatcollide and (method == 0)
    
    addtools = addtools and gp(lp, "Backpack", "Backpack")
    
    local fenv = getfenv()
    local shp = fenv.sethiddenproperty or fenv.set_hidden_property or fenv.set_hidden_prop or fenv.sethiddenprop
    local ssr = fenv.setsimulationradius or fenv.set_simulation_radius or fenv.set_sim_radius or fenv.setsimradius or fenv.set_simulation_rad or fenv.setsimulationrad
    
    if shp and (simradius == "shp") then
    	spawn(function()
    		while c and heartbeat:Wait() do
    			shp(lp, "SimulationRadius", inf)
    		end
    	end)
    elseif ssr and (simradius == "ssr") then
    	spawn(function()
    		while c and heartbeat:Wait() do
    			ssr(inf)
    		end
    	end)
    end
    
    antiragdoll = antiragdoll and function(v)
    	if v:IsA("HingeConstraint") or v:IsA("BallSocketConstraint") then
    		v.Parent = nil
    	end
    end
    
    if antiragdoll then
    	for i, v in pairs(c:GetDescendants()) do
    		antiragdoll(v)
    	end
    	c.DescendantAdded:Connect(antiragdoll)
    end
    
    if antirespawn then
    	respawnrequest()
    end
    
    if method == 0 then
    	wait(loadtime)
    	if not c then
    		return
    	end
    end
    
    if discharscripts then
    	for i, v in pairs(c:GetChildren()) do
    		if v:IsA("LocalScript") then
    			v.Disabled = true
    		end
    	end
    elseif newanimate then
    	local animate = gp(c, "Animate", "LocalScript")
    	if animate and (not animate.Disabled) then
    		animate.Disabled = true
    	else
    		newanimate = false
    	end
    end
    
    if addtools then
    	for i, v in pairs(addtools:GetChildren()) do
    		if v:IsA("Tool") then
    			v.Parent = c
    		end
    	end
    end
    
    pcall(function()
    	settings().Physics.AllowSleep = false
    	settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
    end)
    
    local OLDscripts = {}
    
    for i, v in pairs(c:GetDescendants()) do
    	if v.ClassName == "Script" then
    		table.insert(OLDscripts, v)
    	end
    end
    
    local scriptNames = {}
    
    for i, v in pairs(c:GetDescendants()) do
    	if v:IsA("BasePart") then
    		local newName = tostring(i)
    		local exists = true
    		while exists do
    			exists = false
    			for i, v in pairs(OLDscripts) do
    				if v.Name == newName then
    					exists = true
    				end
    			end
    			if exists then
    				newName = newName .. "_"    
    			end
    		end
    		table.insert(scriptNames, newName)
    		Instance.new("Script", v).Name = newName
    	end
    end
    
    c.Archivable = true
    local hum = c:FindFirstChildOfClass("Humanoid")
    if hum then
    	for i, v in pairs(hum:GetPlayingAnimationTracks()) do
    		v:Stop()
    	end
    end
    local cl = c:Clone()
    if hum and humState16 then
        hum:ChangeState(Enum.HumanoidStateType.Physics)
        if destroyhum then
            wait(1.6)
        end
    end
    if hum and hum.Parent and destroyhum then
        hum:Destroy()
    end
    
    if not c then
        return
    end
    
    local head = gp(c, "Head", "BasePart")
    local torso = gp(c, "Torso", "BasePart") or gp(c, "UpperTorso", "BasePart")
    local root = gp(c, "HumanoidRootPart", "BasePart")
    if hatcollide and c:FindFirstChildOfClass("Accessory") then
        local anything = c:FindFirstChildOfClass("BodyColors") or gp(c, "Health", "Script")
        if not (torso and root and anything) then
            return
        end
        torso:Destroy()
        root:Destroy()
        if shp then
            for i,v in pairs(c:GetChildren()) do
                if v:IsA("Accessory") then
                    shp(v, "BackendAccoutrementState", 0)
                end 
            end
        end
        anything:Destroy()
    end
    
    local model = Instance.new("Model", c)
    model.Name = model.ClassName
    
    model:GetPropertyChangedSignal("Parent"):Connect(function()
        if not (model and model.Parent) then
    	    model = nil
        end
    end)
    
    for i, v in pairs(c:GetChildren()) do
    	if v ~= model then
    		if addtools and v:IsA("Tool") then
    			for i1, v1 in pairs(v:GetDescendants()) do
    				if v1 and v1.Parent and v1:IsA("BasePart") then
    					local bv = Instance.new("BodyVelocity", v1)
    					bv.Velocity = v3_0
    					bv.MaxForce = v3(1000, 1000, 1000)
    					bv.P = 1250
    					bv.Name = "bv_" .. v.Name
    				end
    			end
    		end
    		v.Parent = model
    	end
    end
    
    if breakjoints then
    	model:BreakJoints()
    else
    	if head and torso then
    		for i, v in pairs(model:GetDescendants()) do
    			if v:IsA("Weld") or v:IsA("Snap") or v:IsA("Glue") or v:IsA("Motor") or v:IsA("Motor6D") then
    				local save = false
    				if (v.Part0 == torso) and (v.Part1 == head) then
    					save = true
    				end
    				if (v.Part0 == head) and (v.Part1 == torso) then
    					save = true
    				end
    				if save then
    					if hedafterneck then
    						hedafterneck = v
    					end
    				else
    					v:Destroy()
    				end
    			end
    		end
    	end
    	if method == 3 then
    		spawn(function()
    			wait(loadtime)
    			if model then
    				model:BreakJoints()
    			end
    		end)
    	end
    end
    
    cl.Parent = c
    for i, v in pairs(cl:GetChildren()) do
    	v.Parent = c
    end
    cl:Destroy()
    
    local noclipmodel = (noclipAllParts and c) or model
    local noclipcon = nil
    local function uncollide()
    	if noclipmodel then
    		for i, v in pairs(noclipmodel:GetDescendants()) do
    		    if v:IsA("BasePart") then
    			    v.CanCollide = false
    		    end
    		end
    	else
    		noclipcon:Disconnect()
    	end
    end
    noclipcon = stepped:Connect(uncollide)
    uncollide()
    
    for i, scr in pairs(model:GetDescendants()) do
    	if (scr.ClassName == "Script") and table.find(scriptNames, scr.Name) then
    		local Part0 = scr.Parent
    		if Part0:IsA("BasePart") then
    			for i1, scr1 in pairs(c:GetDescendants()) do
    				if (scr1.ClassName == "Script") and (scr1.Name == scr.Name) and (not scr1:IsDescendantOf(model)) then
    					local Part1 = scr1.Parent
    					if (Part1.ClassName == Part0.ClassName) and (Part1.Name == Part0.Name) then
    						align(Part0, Part1)
    						scr:Destroy()
    						scr1:Destroy()
    						break
    					end
    				end
    			end
    		end
    	end
    end
    
    for i, v in pairs(c:GetDescendants()) do
    	if v and v.Parent and (not v:IsDescendantOf(model)) then
    		if v:IsA("Decal") then
    		    v.Transparency = 1
    		elseif v:IsA("BasePart") then
    			v.Transparency = 1
    			v.Anchored = false
    		elseif v:IsA("ForceField") then
    			v.Visible = false
    		elseif v:IsA("Sound") then
    			v.Playing = false
    		elseif v:IsA("BillboardGui") or v:IsA("SurfaceGui") or v:IsA("ParticleEmitter") or v:IsA("Fire") or v:IsA("Smoke") or v:IsA("Sparkles") then
    			v.Enabled = false
    		end
    	end
    end
    
    if newanimate then
    	local animate = gp(c, "Animate", "LocalScript")
    	if animate then
    		animate.Disabled = false
    	end
    end
    
    if addtools then
    	for i, v in pairs(c:GetChildren()) do
    		if v:IsA("Tool") then
    			v.Parent = addtools
    		end
    	end
    end
    
    local hum0 = model:FindFirstChildOfClass("Humanoid")
    if hum0 then
        hum0:GetPropertyChangedSignal("Parent"):Connect(function()
            if not (hum0 and hum0.Parent) then
                hum0 = nil
            end
        end)
    end
    
    local hum1 = c:FindFirstChildOfClass("Humanoid")
    if hum1 then
        hum1:GetPropertyChangedSignal("Parent"):Connect(function()
            if not (hum1 and hum1.Parent) then
                hum1 = nil
            end
        end)
        
    	ws.CurrentCamera.CameraSubject = hum1
    	local camSubCon = nil
    	local function camSubFunc()
    		camSubCon:Disconnect()
    		if c and hum1 then
    			ws.CurrentCamera.CameraSubject = hum1
    		end
    	end
    	camSubCon = renderstepped:Connect(camSubFunc)
    	if hum0 then
    		hum0:GetPropertyChangedSignal("Jump"):Connect(function()
    			if hum1 then
    				hum1.Jump = hum0.Jump
    			end
    		end)
    	else
    		respawnrequest()
    	end
    end
    
    local rb = Instance.new("BindableEvent", c)
    rb.Event:Connect(function()
    	rb:Destroy()
    	sg:SetCore("ResetButtonCallback", true)
    	if destroyhum then
    		c:BreakJoints()
    		return
    	end
    	if hum0 and (hum0.Health > 0) then
    		model:BreakJoints()
    		hum0.Health = 0
    	end
    	if antirespawn then
    	    respawnrequest()
    	end
    end)
    sg:SetCore("ResetButtonCallback", rb)
    
    spawn(function()
    	while c do
    		if hum0 and hum1 then
    			hum1.Jump = hum0.Jump
    		end
    		wait()
    	end
    	sg:SetCore("ResetButtonCallback", true)
    end)
    
    R15toR6 = R15toR6 and hum1 and (hum1.RigType == Enum.HumanoidRigType.R15)
    if R15toR6 then
        local part = gp(c, "HumanoidRootPart", "BasePart") or gp(c, "UpperTorso", "BasePart") or gp(c, "LowerTorso", "BasePart") or gp(c, "Head", "BasePart") or c:FindFirstChildWhichIsA("BasePart")
    	if part then
    	    local cfr = part.CFrame
    		local R6parts = { 
    			head = {
    				Name = "Head",
    				Size = v3(2, 1, 1),
    				R15 = {
    					Head = 0
    				}
    			},
    			torso = {
    				Name = "Torso",
    				Size = v3(2, 2, 1),
    				R15 = {
    					UpperTorso = 0.2,
    					LowerTorso = -0.8
    				}
    			},
    			root = {
    				Name = "HumanoidRootPart",
    				Size = v3(2, 2, 1),
    				R15 = {
    					HumanoidRootPart = 0
    				}
    			},
    			leftArm = {
    				Name = "Left Arm",
    				Size = v3(1, 2, 1),
    				R15 = {
    					LeftHand = -0.849,
    					LeftLowerArm = -0.174,
    					LeftUpperArm = 0.415
    				}
    			},
    			rightArm = {
    				Name = "Right Arm",
    				Size = v3(1, 2, 1),
    				R15 = {
    					RightHand = -0.849,
    					RightLowerArm = -0.174,
    					RightUpperArm = 0.415
    				}
    			},
    			leftLeg = {
    				Name = "Left Leg",
    				Size = v3(1, 2, 1),
    				R15 = {
    					LeftFoot = -0.85,
    					LeftLowerLeg = -0.29,
    					LeftUpperLeg = 0.49
    				}
    			},
    			rightLeg = {
    				Name = "Right Leg",
    				Size = v3(1, 2, 1),
    				R15 = {
    					RightFoot = -0.85,
    					RightLowerLeg = -0.29,
    					RightUpperLeg = 0.49
    				}
    			}
    		}
    		for i, v in pairs(c:GetChildren()) do
    			if v:IsA("BasePart") then
    				for i1, v1 in pairs(v:GetChildren()) do
    					if v1:IsA("Motor6D") then
    						v1.Part0 = nil
    					end
    				end
    			end
    		end
    		part.Archivable = true
    		for i, v in pairs(R6parts) do
    			local part = part:Clone()
    			part:ClearAllChildren()
    			part.Name = v.Name
    			part.Size = v.Size
    			part.CFrame = cfr
    			part.Anchored = false
    			part.Transparency = 1
    			part.CanCollide = false
    			for i1, v1 in pairs(v.R15) do
    				local R15part = gp(c, i1, "BasePart")
    				local att = gp(R15part, "att1_" .. i1, "Attachment")
    				if R15part then
    					local weld = Instance.new("Weld", R15part)
    					weld.Name = "Weld_" .. i1
    					weld.Part0 = part
    					weld.Part1 = R15part
    					weld.C0 = cf(0, v1, 0)
    					weld.C1 = cf(0, 0, 0)
    					R15part.Massless = true
    					R15part.Name = "R15_" .. i1
    					R15part.Parent = part
    					if att then
    						att.Parent = part
    						att.Position = v3(0, v1, 0)
    					end
    				end
    			end
    			part.Parent = c
    			R6parts[i] = part
    		end
    		local R6joints = {
    			neck = {
    				Parent = R6parts.torso,
    				Name = "Neck",
    				Part0 = R6parts.torso,
    				Part1 = R6parts.head,
    				C0 = cf(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
    				C1 = cf(0, -0.5, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
    			},
    			rootJoint = {
    				Parent = R6parts.root,
    				Name = "RootJoint" ,
    				Part0 = R6parts.root,
    				Part1 = R6parts.torso,
    				C0 = cf(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0),
    				C1 = cf(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
    			},
    			rightShoulder = {
    				Parent = R6parts.torso,
    				Name = "Right Shoulder",
    				Part0 = R6parts.torso,
    				Part1 = R6parts.rightArm,
    				C0 = cf(1, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
    				C1 = cf(-0.5, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
    			},
    			leftShoulder = {
    				Parent = R6parts.torso,
    				Name = "Left Shoulder",
    				Part0 = R6parts.torso,
    				Part1 = R6parts.leftArm,
    				C0 = cf(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
    				C1 = cf(0.5, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
    			},
    			rightHip = {
    				Parent = R6parts.torso,
    				Name = "Right Hip",
    				Part0 = R6parts.torso,
    				Part1 = R6parts.rightLeg,
    				C0 = cf(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0),
    				C1 = cf(0.5, 1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
    			},
    			leftHip = {
    				Parent = R6parts.torso,
    				Name = "Left Hip" ,
    				Part0 = R6parts.torso,
    				Part1 = R6parts.leftLeg,
    				C0 = cf(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0),
    				C1 = cf(-0.5, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
    			}
    		}
    		for i, v in pairs(R6joints) do
    			local joint = Instance.new("Motor6D")
    			for prop, val in pairs(v) do
    				joint[prop] = val
    			end
    			R6joints[i] = joint
    		end
    		if hum1 then
        		hum1.RigType = Enum.HumanoidRigType.R6
        		hum1.HipHeight = 0
    		end
    	end
    end
    
    local torso1 = torso
    torso = gp(c, "Torso", "BasePart") or ((not R15toR6) and gp(c, torso.Name, "BasePart"))
    if (typeof(hedafterneck) == "Instance") and head and torso and torso1 then
    	local conNeck = nil
    	local conTorso = nil
    	local contorso1 = nil
    	local aligns = {}
    	local function enableAligns()
    	    conNeck:Disconnect()
            conTorso:Disconnect()
            conTorso1:Disconnect()
    		for i, v in pairs(aligns) do
    			v.Enabled = true
    		end
    	end
    	conNeck = hedafterneck.Changed:Connect(function(prop)
    	    if table.find({"Part0", "Part1", "Parent"}, prop) then
    	        enableAligns()
    		end
    	end)
    	conTorso = torso:GetPropertyChangedSignal("Parent"):Connect(enableAligns)
    	conTorso1 = torso1:GetPropertyChangedSignal("Parent"):Connect(enableAligns)
    	for i, v in pairs(head:GetDescendants()) do
    		if v:IsA("AlignPosition") or v:IsA("AlignOrientation") then
    			i = tostring(i)
    			aligns[i] = v
    			v:GetPropertyChangedSignal("Parent"):Connect(function()
    			    aligns[i] = nil
    			end)
    			v.Enabled = false
    		end
    	end
    end
    
    local flingpart0 = gp(model, flingpart, "BasePart") or gp(gp(model, flingpart, "Accessory"), "Handle", "BasePart")
    local flingpart1 = gp(c, flingpart, "BasePart") or gp(gp(c, flingpart, "Accessory"), "Handle", "BasePart")
    
    local fling = function() end
    if flingpart0 and flingpart1 then
        flingpart0:GetPropertyChangedSignal("Parent"):Connect(function()
            if not (flingpart0 and flingpart0.Parent) then
                flingpart0 = nil
                fling = function() end
            end
        end)
        flingpart0.Archivable = true
        flingpart1:GetPropertyChangedSignal("Parent"):Connect(function()
            if not (flingpart1 and flingpart1.Parent) then
                flingpart1 = nil
                fling = function() end
            end
        end)
        local att0 = gp(flingpart0, "att0_" .. flingpart0.Name, "Attachment")
        local att1 = gp(flingpart1, "att1_" .. flingpart1.Name, "Attachment")
        if att0 and att1 then
            att0:GetPropertyChangedSignal("Parent"):Connect(function()
                if not (att0 and att0.Parent) then
                    att0 = nil
                    fling = function() end
                end
            end)
            att1:GetPropertyChangedSignal("Parent"):Connect(function()
                if not (att1 and att1.Parent) then
                    att1 = nil
                    fling = function() end
                end
            end)
            local lastfling = nil
            local mouse = lp:GetMouse()
            fling = function(target, duration, rotVelocity)
                if typeof(target) == "Instance" then
                    if target:IsA("BasePart") then
                        target = target.Position
                    elseif target:IsA("Model") then
                        target = gp(target, "HumanoidRootPart", "BasePart") or gp(target, "Torso", "BasePart") or gp(target, "UpperTorso", "BasePart") or target:FindFirstChildWhichIsA("BasePart")
                        if target then
                            target = target.Position
                        else
                            return
                        end
                    elseif target:IsA("Humanoid") then
                        local parent = target.Parent
                        if not (parent and parent:IsA("Model")) then
                            return
                        end
                        target = gp(target, "HumanoidRootPart", "BasePart") or gp(target, "Torso", "BasePart") or gp(target, "UpperTorso", "BasePart") or target:FindFirstChildWhichIsA("BasePart")
                        if target then
                            target = target.Position
                        else
                            return
                        end
                    else
                        return
                    end
                elseif typeof(target) == "CFrame" then
                    target = target.Position
                elseif typeof(target) ~= "Vector3" then
                    target = mouse.Hit
                    if target then
                        target = target.Position
                    else
                        return
                    end
                end
                lastfling = target
                if type(duration) ~= "number" then
                    duration = tonumber(duration) or 0.5
                end
                if typeof(rotVelocity) ~= "Vector3" then
                    rotVelocity = v3(20000, 20000, 20000)
                end
                if not (target and flingpart0 and flingpart1 and att0 and att1) then
                    return
                end
                local flingpart = flingpart0:Clone()
                flingpart.Transparency = 1
                flingpart.Size = v3(0.01, 0.01, 0.01)
                flingpart.CanCollide = false
                flingpart.Name = "flingpart_" .. flingpart0.Name
                flingpart.Anchored = true
                flingpart.Velocity = v3_0
                flingpart.RotVelocity = v3_0
                flingpart:GetPropertyChangedSignal("Parent"):Connect(function()
                    if not (flingpart and flingpart.Parent) then
                        flingpart = nil
                    end
                end)
                flingpart.Parent = flingpart1
                if flingpart0.Transparency > 0.5 then
                    flingpart0.Transparency = 0.5
                end
                att1.Parent = flingpart
                for i, v in pairs(att0:GetChildren()) do
                    if v:IsA("AlignOrientation") then
                        v.Enabled = false
                    end
                end
                local con = nil
                con = heartbeat:Connect(function()
                    if target and (lastfling == target) and flingpart and flingpart0 and flingpart1 and att0 and att1 then
                        flingpart0.RotVelocity = rotVelocity
                        flingpart.Position = target
                    else
                        con:Disconnect()
                    end
                end)
                local rsteppedRotVel = v3(
                    ((rotVelocity.X > 0) and -1) or 1,
                    ((rotVelocity.Y > 0) and -1) or 1,
                    ((rotVelocity.Z > 0) and -1) or 1
                )
                local con = nil
                con = renderstepped:Connect(function()
                    if target and (lastfling == target) and flingpart and flingpart0 and flingpart1 and att0 and att1 then
                        flingpart0.RotVelocity = rsteppedRotVel
                        flingpart.Position = target
                    else
                        con:Disconnect()
                    end
                end)
                wait(duration)
                if lastfling ~= target then
                    if flingpart then
                        if att1 and (att1.Parent == flingpart) then
                            att1.Parent = flingpart1
                        end
                        flingpart:Destroy()
                    end
                    return
                end
                target = nil
                if not (flingpart and flingpart0 and flingpart1 and att0 and att1) then
                    return
                end
                flingpart0.RotVelocity = v3_0
                att1.Parent = flingpart1
                for i, v in pairs(att0:GetChildren()) do
                    if v:IsA("AlignOrientation") then
                        v.Enabled = true
                    end
                end
                if flingpart then
                    flingpart:Destroy()
                end
            end
        end
    end
end

local lp = game:GetService("Players").LocalPlayer

local c = lp.Character
if not (c and c.Parent) then
	return print("character not found")
end
c:GetPropertyChangedSignal("Parent"):Connect(function()
    if not (c and c.Parent) then
        c = nil
    end
end)

--getPart function

local function gp(parent, name, className)
	local ret = nil
	pcall(function()
		for i, v in pairs(parent:GetChildren()) do
			if (v.Name == name) and v:IsA(className) then
				ret = v
				break
			end
		end
	end)
	return ret
end

--check if reanimate loaded

local model = gp(c, "Model", "Model")
if not model then return print("model not found") end

--find body parts

local head = gp(c, "Head", "BasePart")
if not head then return print("head not found") end

local torso = gp(c, "Torso", "BasePart")
if not torso then return print("torso not found") end

local humanoidRootPart = gp(c, "HumanoidRootPart", "BasePart")
if not humanoidRootPart then return print("humanoid root part not found") end

local leftArm = gp(c, "Left Arm", "BasePart")
if not leftArm then return print("left arm not found") end

local rightArm = gp(c, "Right Arm", "BasePart")
if not rightArm then return print("right arm not found") end

local leftLeg = gp(c, "Left Leg", "BasePart")
if not leftLeg then return print("left leg not found") end

local rightLeg = gp(c, "Right Leg", "BasePart")
if not rightLeg then return print("right leg not found") end

--find rig joints

local neck = gp(torso, "Neck", "Motor6D")
if not neck then return print("neck not found") end

local rootJoint = gp(humanoidRootPart, "RootJoint", "Motor6D")
if not rootJoint then return print("root joint not found") end

local leftShoulder = gp(torso, "Left Shoulder", "Motor6D")
if not leftShoulder then return print("left shoulder not found") end

local rightShoulder = gp(torso, "Right Shoulder", "Motor6D")
if not rightShoulder then return print("right shoulder not found") end

local leftHip = gp(torso, "Left Hip", "Motor6D")
if not leftHip then return print("left hip not found") end

local rightHip = gp(torso, "Right Hip", "Motor6D")
if not rightHip then return print("right hip not found") end

--humanoid

local hum = c:FindFirstChildOfClass("Humanoid")
if not hum then return print("humanoid not found") end

local animate = gp(c, "Animate", "LocalScript")
if animate then
	animate.Disabled = true
end

for i, v in pairs(hum:GetPlayingAnimationTracks()) do
	v:Stop()
end

local function stopIfRemoved(instance)
    if not (instance and instance.Parent) then
        c = nil
        return
    end
    instance:GetPropertyChangedSignal("Parent"):Connect(function()
        if not (instance and instance.Parent) then
            c = nil
        end
    end)
end
stopIfRemoved(c)
stopIfRemoved(hum)
for i, v in pairs({head, torso, leftArm, rightArm, leftLeg, rightLeg, humanoidRootPart}) do
    stopIfRemoved(v)
end
for i, v in pairs({neck, rootJoint, leftShoulder, rightShoulder, leftHip, rightHip}) do
    stopIfRemoved(v)
end
if not c then
    return
end
local mode = false
uis = game:GetService("UserInputService")
local modes = {
	[Enum.KeyCode.Q] = "lay",
	[Enum.KeyCode.E] = "sit",
	[Enum.KeyCode.K] = "kazotsky",
	[Enum.KeyCode.T] = "wave",
	[Enum.KeyCode.Y] = "dab",
	[Enum.KeyCode.U] = "dance",
	[Enum.KeyCode.L] = "L",
	[Enum.KeyCode.F] = "fly",
	[Enum.KeyCode.G] = "floss",
	[Enum.KeyCode.R] = "rickroll"
}
uis.InputBegan:Connect(function(keycode)
    if uis:GetFocusedTextBox() then
        return
    end
	keycode = keycode.KeyCode
	if modes[keycode] ~= nil then
		if mode == modes[keycode] then
			mode = nil
		else
			mode = modes[keycode]
		end
	end
end)

local cf, v3, euler, sin, sine, abs = CFrame.new, Vector3.new, CFrame.fromEulerAnglesXYZ, math.sin, 0, math.abs
local con = nil
con = game:GetService("RunService").RenderStepped:Connect(function(deltaTime)
    if not c then
        con:Disconnect()
        return
    end
    deltaTime = deltaTime * 10
    hum.CameraOffset = hum.CameraOffset:Lerp(v3(0, head.Position.Y - humanoidRootPart.Position.Y - 1.5, 0), deltaTime / 4)
    sine = sine + deltaTime * 3
    local vel = humanoidRootPart.Velocity
    if vel.Magnitude > 2 then
        if abs(vel.X) + abs(vel.Z) > abs(vel.Y) then -- walk
    
            neck.C0 = neck.C0:Lerp(cf(0, 1, 0) * euler(-1.5707963267948966 - 0.08726646259971647 * sin((sine - 2.5) * 0.4), -0.08726646259971647 * sin((sine - 7.5) * 0.2), -3.1590459461097367 - 0.17453292519943295 * sin((sine + 5) * 0.2)), deltaTime) 
            rootJoint.C0 = rootJoint.C0:Lerp(cf(-0.1 * sin((sine + 5) * 0.2), 0.1 + 0.125 * sin((sine + 10) * 0.4), 0) * euler(-1.6580627893946132, 0.08726646259971647 * sin((sine - 10) * 0.2), -3.141592653589793 + 0.17453292519943295 * sin((sine + 2.5) * 0.2)), deltaTime) 
            leftShoulder.C0 = leftShoulder.C0:Lerp(cf(-1, 0.5 - 0.1 * sin((sine - 15) * 0.2), 0) * euler(1.5707963267948966 - 0.4363323129985824 * sin((sine + 5) * 0.2), -1.6580627893946132 + 0.08726646259971647 * sin((sine - 10) * 0.2), 1.5707963267948966), deltaTime) 
            rightShoulder.C0 = rightShoulder.C0:Lerp(cf(1, 0.5 + 0.1 * sin((sine - 15) * 0.2), 0) * euler(1.5707963267948966 + 0.4363323129985824 * sin((sine + 5) * 0.2), 1.6580627893946132 + 0.08726646259971647 * sin((sine - 10) * 0.2), -1.5707963267948966), deltaTime) 
            leftHip.C0 = leftHip.C0:Lerp(cf(-1, -1 - 0.15 * sin((sine + 5) * 0.2), 0) * euler(1.5707963267948966, -1.6057029118347832 + 0.08726646259971647 * sin((sine - 10) * 0.2), 1.5707963267948966 + 0.8726646259971648 * sin(sine * 0.2)), deltaTime) 
            rightHip.C0 = rightHip.C0:Lerp(cf(1, -1 + 0.15 * sin((sine + 5) * 0.2), 0) * euler(1.5707963267948966, 1.6057029118347832 + 0.08726646259971647 * sin((sine - 10) * 0.2), -1.5707963267948966 + 0.8726646259971648 * sin(sine * 0.2)), deltaTime) 
            --local MW_animator_progressSave = "0,  0,  0,  0.1,  -90,  -5,  -2.5,  0.4,  1,  0,  0,  0.1,  0,  -5,  -7.5,  0.2,  0,  0,  0,  0.1,  -181,  -10,  5,  0.2,  0, -0.1, 5,  0.2,  -95,  0,  0,  0.1,  0.1,  0.125,  10,  0.4,  0,  5,  -10,  0.2,  0,  0,  0,  0.1,  -180,  10,  2.5,  0.2,  -1,  0,  0,  0.1,  90,  -25,  5,  0.2,  0.5,  -0.1,  -15,  0.2,  -95,  5,  -10,  0.2,  0,  0,  0,  0.1,  90,  0,  0,  0.1,  1,  0,  0,  0.1,  90,  25,  5,  0.2,  0.5,  0.1,  -15,  0.2,  95,  5,  -10,  0.2,  0,  0,  0,  0.1,  -90,  0,  0,  0.1,  -1,  0,  0,  0.1,  90,  0,  0,  0.1,  -1,  -0.15,  5,  0.2,  -92,  5,  -10,  0.2,  0,  0,  0,  0.1,  90,  50,  0,  0.2,  1,  0,  0,  0.1,  90,  0,  0,  0.1,  -1,  0.15,  5,  0.2,  92,  5,  -10,  0.2,  0,  0,  0,  0.1,  -90,  50,  0,  0.2"
    
        elseif vel.Y > 0 then -- jump

            neck.C0 = neck.C0:Lerp(cf(0, 1, 0) * euler(-1.3962634015954636 + 0.08726646259971647 * sin((sine + 45) * 0.1), 0, -3.1590459461097367), deltaTime) 
            rootJoint.C0 = rootJoint.C0:Lerp(cf(0, 0, 0) * euler(-1.4835298641951802 - 0.08726646259971647 * sin((sine + 30) * 0.1), 0, -3.1590459461097367), deltaTime) 
            leftShoulder.C0 = leftShoulder.C0:Lerp(cf(-1, 0.5, 0) * euler(-1.5707963267948966 - 0.17453292519943295 * sin((sine + 15) * 0.1), -1.9198621771937625 + 0.17453292519943295 * sin(sine * 0.1), 2.6179938779914944), deltaTime) 
            rightShoulder.C0 = rightShoulder.C0:Lerp(cf(1, 0.5, 0) * euler(-2.6179938779914944 - 0.17453292519943295 * sin((sine + 15) * 0.1), 1.9198621771937625 - 0.17453292519943295 * sin(sine * 0.1), -1.5707963267948966), deltaTime) 
            leftHip.C0 = leftHip.C0:Lerp(cf(-1, -0.8, 0) * euler(-0.4363323129985824 + 0.17453292519943295 * sin((sine - 25) * 0.1), -1.5882496193148399, 0), deltaTime) 
            rightHip.C0 = rightHip.C0:Lerp(cf(1, -0.5, -1) * euler(-0.4363323129985824 + 0.17453292519943295 * sin((sine - 15) * 0.1), 1.5707963267948966, 0), deltaTime) 
            --local MW_animator_progressSave = "0, 0, 0, 0.1, -80, 5, 45, 0.1, 1, 0, 0, 0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, -181, 0, 0, 0.1, 0, 0, 0, 0.1, -85, -5, 30, 0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, -181, 0, 0, 0.1, -1, 0, 0, 0.1, -90, -10, 15, 0.1, 0.5, 0, 0, 0.1, -110, 10, 0, 0.1, 0, 0, 0, 0.1, 150, 0, 0, 0.1, 1, 0, 0, 0.1, -150, -10, 15, 0.1, 0.5, 0, 0, 0.1, 110, -10, 0, 0.1, 0, 0, 0, 0.1, -90, 0, 0, 0.1, -1, 0, 0, 0.1, -25, 10, -25, 0.1, -0.8, 0, 0, 0.1, -91, 0, 0, 0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, 1, 0, 0, 0.1, -25, 10, -15, 0.1, -0.5, 0, 0, 0.1, 90, 0, 0, 0.1, -1, 0, 0, 0.1, 0, 0, 0, 0.1"

        else -- fall

            neck.C0 = neck.C0:Lerp(cf(0, 1, 0) * euler(-1.7453292519943295 + 0.08726646259971647 * sin((sine + 45) * 0.1), 0, -3.1590459461097367), deltaTime) 
            rootJoint.C0 = rootJoint.C0:Lerp(cf(0, 0, 0) * euler(-1.6580627893946132 - 0.08726646259971647 * sin((sine + 30) * 0.1), 0, -3.1590459461097367), deltaTime) 
            leftShoulder.C0 = leftShoulder.C0:Lerp(cf(-1, 0.5, 0) * euler(-1.5707963267948966 - 0.17453292519943295 * sin((sine + 15) * 0.1), -1.0471975511965976 + 0.17453292519943295 * sin(sine * 0.1), -2.0943951023931953), deltaTime) 
            rightShoulder.C0 = rightShoulder.C0:Lerp(cf(1, 0.5, 0) * euler(2.0943951023931953 - 0.17453292519943295 * sin((sine + 15) * 0.1), 2.2689280275926285 + 0.17453292519943295 * sin(sine * 0.1), -1.5707963267948966), deltaTime) 
            leftHip.C0 = leftHip.C0:Lerp(cf(-1, -0.8, 0) * euler(-0.4363323129985824 + 0.17453292519943295 * sin((sine - 25) * 0.1), -1.5882496193148399, 0), deltaTime) 
            rightHip.C0 = rightHip.C0:Lerp(cf(1, -0.5, -1) * euler(-0.4363323129985824 + 0.17453292519943295 * sin((sine - 15) * 0.1), 1.5707963267948966, 0), deltaTime) 
            --local MW_animator_progressSave = "0, 0, 0, 0.1, -100, 5, 45, 0.1, 1, 0, 0, 0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, -181, 0, 0, 0.1, 0, 0, 0, 0.1, -95, -5, 30, 0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, -181, 0, 0, 0.1, -1, 0, 0, 0.1, -90, -10, 15, 0.1, 0.5, 0, 0, 0.1, -60, 10, 0, 0.1, 0, 0, 0, 0.1, -120, 0, 0, 0.1, 1, 0, 0, 0.1, 120, -10, 15, 0.1, 0.5, 0, 0, 0.1, 130, 10, 0, 0.1, 0, 0, 0, 0.1, -90, 0, 0, 0.1, -1, 0, 0, 0.1, -25, 10, -25, 0.1, -0.8, 0, 0, 0.1, -91, 0, 0, 0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, 1, 0, 0, 0.1, -25, 10, -15, 0.1, -0.5, 0, 0, 0.1, 90, 0, 0, 0.1, -1, 0, 0, 0.1, 0, 0, 0, 0.1"

        end
        
    else -- idle

		if not mode then
		    
            neck.C0 = neck.C0:Lerp(cf(0, 1, 0) * euler(-1.5707963267948966 + 0.08726646259971647 * sin((sine - 60) * 0.05), 0, -3.490658503988659 + 0.5235987755982988 * sin(sine * 0.0125)), deltaTime) 
            rootJoint.C0 = rootJoint.C0:Lerp(cf(0, 0.1 * sin(sine * 0.05), 0) * euler(-1.5707963267948966 + 0.08726646259971647 * sin((sine - 30) * 0.05), 0, -2.792526803190927), deltaTime) 
            leftShoulder.C0 = leftShoulder.C0:Lerp(cf(-1, 0.5 - 0.1 * sin((sine + 40) * 0.05), 0) * euler(1.5707963267948966, -1.3962634015954636 + 0.17453292519943295 * sin((sine + 30) * 0.05), 1.2217304763960306), deltaTime) 
            rightShoulder.C0 = rightShoulder.C0:Lerp(cf(1, 0.5 - 0.1 * sin((sine + 40) * 0.05), 0) * euler(1.5707963267948966, 1.7453292519943295 - 0.08726646259971647 * sin((sine + 30) * 0.05), -1.5707963267948966), deltaTime) 
            leftHip.C0 = leftHip.C0:Lerp(cf(-1 + 0.06 * sin((sine + 30) * 0.05), -1.1 - 0.1 * sin(sine * 0.05), -0.11 * sin((sine + 30) * 0.05)) * euler(1.3962634015954636 - 0.08726646259971647 * sin((sine - 20) * 0.05), -1.7453292519943295, 1.7453292519943295), deltaTime) 
            rightHip.C0 = rightHip.C0:Lerp(cf(1 + 0.06 * sin((sine + 30) * 0.05), -1.1 - 0.1 * sin(sine * 0.05), -0.11 * sin((sine + 30) * 0.05)) * euler(2.0943951023931953 + 0.08726646259971647 * sin((sine + 40) * 0.05), 1.7453292519943295, -1.7453292519943295), deltaTime) 
            --local MW_animator_progressSave = "0,  0,  0,  0.1,  -90,  5,  -60,  0.05,  1,  0,  0,  0.1,  0,  0,  0,  0.025,  0,  0,  0,  0.1,  -200,  30,  0,  0.0125,  0,  0,  0,  0.1,  -90,  5,  -30,  0.05,  0,  0.1,  0,  0.05,  0,  0,  0,  0.1,  0,  0,  0,  0.1,  -160,  0,  0,  0.1,  -1,  0,  0,  0.1,  90,  0,  0,  0.1,  0.5,  -0.1,  40,  0.05,  -80,  10,  30,  0.05,  0,  0,  0,  0.1,  70,  0,  0,  0.1,  1,  0,  0,  0.1,  90,  0,  0,  0.05,  0.5,  -0.1,  40,  0.05,  100,  -5,  30,  0.05,  0,  0,  0,  0.1,  -90,  0,  0,  0.1,  -1,  0.06,  30,  0.05,  80,  -5,  -20,  0.05,  -1.1,  -0.1,  0,  0.05,  -100,  0,  0,  0.1,  0,  -0.11,  30,  0.05,  100,  0,  0,  0.1,  1,  0.06,  30,  0.05,  120,  5,  40,  0.05,  -1.1,  -0.1,  0,  0.05,  100,  0,  0,  0.1,  0,  -0.11,  30,  0.05,  -100,  0,  0,  0.1"

		elseif mode == "kazotsky" then

            neck.C0 = neck.C0:Lerp(cf(0, 1, 0) * euler(-1.6580627893946132 - 0.04363323129985824 * sin(sine * 0.4), -0.12217304763960307 * sin((sine + 2.5) * 0.2), -3.1590459461097367 - 0.20943951023931956 * sin(sine * 0.2)), deltaTime) 
            rootJoint.C0 = rootJoint.C0:Lerp(cf(0, 0.2 + 0.25 * sin((sine + 2.5) * 0.4), 0) * euler(-1.4835298641951802 + 0.08726646259971647 * sin(sine * 0.4), 0.08726646259971647 * sin(sine * 0.2), -3.1590459461097367 + 0.17453292519943295 * sin(sine * 0.2)), deltaTime) 
            leftShoulder.C0 = leftShoulder.C0:Lerp(cf(-0.7 - 0.07 * sin((sine - 2.5) * 0.2), 0.2 + 0.05 * sin(sine * 0.2), -0.2 + 0.1 * sin(sine * 0.2)) * euler(0.08726646259971647 * sin(sine * 0.4), 3.2288591161895095 + 0.17453292519943295 * sin(sine * 0.2), -1.4835298641951802 - 0.03490658503988659 * sin((sine - 15) * 0.4)), deltaTime) 
            rightShoulder.C0 = rightShoulder.C0:Lerp(cf(0.7 - 0.07 * sin((sine - 2.5) * 0.2), 0.2 - 0.05 * sin(sine * 0.2), -0.2 - 0.1 * sin(sine * 0.2)) * euler(0.08726646259971647 * sin(sine * 0.4), 3.0543261909900767 + 0.17453292519943295 * sin(sine * 0.2), 1.4835298641951802 + 0.03490658503988659 * sin((sine - 15) * 0.4)), deltaTime) 
            leftHip.C0 = leftHip.C0:Lerp(cf(-1, -1, 0) * euler(1.3089969389957472 + 0.8726646259971648 * sin(sine * 0.2), -1.6580627893946132 + 0.08726646259971647 * sin(sine * 0.2), 0.8726646259971648), deltaTime) 
            rightHip.C0 = rightHip.C0:Lerp(cf(1, -1, 0) * euler(1.3089969389957472 - 0.8726646259971648 * sin(sine * 0.2), 1.6580627893946132 + 0.08726646259971647 * sin(sine * 0.2), -0.8726646259971648), deltaTime) 
            --local MW_animator_progressSave = "0,   0,   0,   0.1,   -95,  -2.5,  0,   0.4,   1,   0,   0,   0.1,   0,  -7,  2.5,   0.2,   0,   0,   0,   0.1,   -181,  -12,  0,   0.2,   0,   0,   0,   0.1,   -85,   5,   0,   0.4,   0.2,   0.25,    2.5,   0.4,   0,   5,   0,   0.2,   0,   0,   0,   0.1,   -181,   10,   0,   0.2,   -0.7,   -0.07,   -2.5,   0.2,   0,   5,   0,   0.4,   0.2,   0.05,   0,   0.2,   185,   10,   0,   0.2,  -0.2,   0.1,   0,   0.2,   -85,  -2,    -15,   0.4,   0.7,   -0.07,   -2.5,   0.2,   0,   5,   0,   0.4,   0.2,  -0.05,   0,   0.2,   175,   10,   0,   0.2,  -0.2,  -0.1,   0,   0.2,   85,  2,  -15,   0.4,   -1,   0,   0,   0.1,  75,   50,   0,   0.2,   -1,   0,   0,   0.1,   -95,  5,   0,   0.2,   0,   0,   0,   0.1,   50,   0,   0,   0.1,   1,   0,   0,   0.1,   75,   -50,   0,   0.2,   -1,   0,   0,   0.1,  95,  5,   0,   0.2,   0,   0,   0,   0.1,   -50,   0,   0,     0.1"

		elseif mode == "sit" then
		    
            neck.C0 = neck.C0:Lerp(cf(0, 1, 0) * euler(-1.5882496193148399 - 0.04363323129985824 * sin((sine - 35) * 0.05), 0, -3.1590459461097367 + 0.5235987755982988 * sin(sine * 0.0125)), deltaTime) 
            rootJoint.C0 = rootJoint.C0:Lerp(cf(0, -1.75 + 0.1 * sin(sine * 0.05), 0.0375 * sin((sine + 5) * 0.05)) * euler(-1.3962634015954636 + 0.04363323129985824 * sin((sine + 5) * 0.05), 0, -3.1590459461097367), deltaTime) 
            leftShoulder.C0 = leftShoulder.C0:Lerp(cf(-1, 0.25 - 0.1 * sin(sine * 0.05), 0) * euler(0, -1.3962634015954636 + 0.08726646259971647 * sin((sine + 10) * 0.05), 0.17453292519943295 - 0.04363323129985824 * sin((sine + 5) * 0.05)), deltaTime) 
            rightShoulder.C0 = rightShoulder.C0:Lerp(cf(1, 0.25 - 0.1 * sin(sine * 0.05), 0) * euler(0, 1.3962634015954636 - 0.08726646259971647 * sin((sine + 10) * 0.05), -0.17453292519943295 + 0.04363323129985824 * sin((sine + 5) * 0.05)), deltaTime) 
            leftHip.C0 = leftHip.C0:Lerp(cf(-1, -0.75 - 0.05 * sin(sine * 0.05), -0.5) * euler(1.3089969389957472 - 0.08726646259971647 * sin((sine + 5) * 0.05), -1.5882496193148399, 0), deltaTime) 
            rightHip.C0 = rightHip.C0:Lerp(cf(1, 0.25 - 0.15 * sin(sine * 0.05), -1 - 0.17 * sin((sine + 7.5) * 0.05)) * euler(0, 1.5707963267948966, -0.12217304763960307 * sin((sine + 5) * 0.05)), deltaTime) 
            --local MW_animator_progressSave = "0, 0, 0, 0.1, -91, -2.5, -35, 0.05, 1, 0, 0, 0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, -181, 30, 0, 0.0125, 0, 0, 0, 0.1, -80, 2.5, 5, 0.05, -1.75, 0.1, 0, 0.05, 0, 0, 0, 0.1, 0, 0.0375, 5, 0.05, -181, 0, 0, 0.1, -1, 0, 0, 0.1, -0, 0, 0, 0.1, 0.25, -0.1, 0, 0.05, -80, 5, 10, 0.05, 0, 0, 0, 0.1, 10, -2.5, 5, 0.05, 1, 0, 0, 0.1, 0, 0, 0, 0.1, 0.25, -0.1, 0, 0.05, 80, -5, 10, 0.05, 0, 0, 0, 0.1, -10, 2.5, 5, 0.05, -1, 0, 0, 0.1, 75, -5, 5, 0.05, -0.75, -0.05, 0, 0.05, -91, 0, 0, 0.1, -0.5, 0, 0, 0.1, 0, 0, 0, 0.1, 1, 0, 0, 0.1, 0, 0, 5, 0.05, 0.25, -0.15, 0, 0.05, 90, 0, 0, 0.1, -1, -0.17, 7.5, 0.05, 0, -7, 5, 0.05"		

        elseif mode == "wave" then
		    
		    neck.C0 = neck.C0:Lerp(cf(0, 1, 0) * euler(-1.5882496193148399, -0.17453292519943295 * sin((sine - 6) * 0.1), -3.1590459461097367), deltaTime) 
            rootJoint.C0 = rootJoint.C0:Lerp(cf(0.2 * sin((sine - 10) * 0.1), 0, 0) * euler(-1.5707963267948966, 0.17453292519943295 * sin((sine - 10) * 0.1), -3.1590459461097367), deltaTime) 
            leftShoulder.C0 = leftShoulder.C0:Lerp(cf(-1 + 0.025 * sin((sine - 20) * 0.1), 0.5, 0) * euler(1.5707963267948966, -1.631882850614698 + 0.061086523819801536 * sin((sine - 20) * 0.1), 1.5707963267948966), deltaTime) 
            rightShoulder.C0 = rightShoulder.C0:Lerp(cf(1 - 0.15 * sin(sine * 0.1), 1.4, 0) * euler(1.5707963267948966, 1.3962634015954636 + 0.3490658503988659 * sin(sine * 0.1), 1.5707963267948966), deltaTime) 
            leftHip.C0 = leftHip.C0:Lerp(cf(-1 - 0.025 * sin((sine - 10) * 0.1), -0.95 - 0.175 * sin((sine - 10) * 0.1), 0) * euler(1.5707963267948966, -1.7453292519943295 + 0.17453292519943295 * sin((sine - 10) * 0.1), 1.5707963267948966), deltaTime) 
            rightHip.C0 = rightHip.C0:Lerp(cf(1 - 0.025 * sin((sine - 10) * 0.1), -0.95 + 0.175 * sin((sine - 10) * 0.1), 0) * euler(1.5707963267948966, 1.7453292519943295 + 0.17453292519943295 * sin((sine - 10) * 0.1), -1.5707963267948966), deltaTime) 
            --local MW_animator_progressSave = "0, 0, 0, 0.1, -91, 0, 0, 0.1, 1, 0, 0, 0.1, 0, -10, -6, 0.1, 0, 0, 0, 0.1, -181, 0, 0, 0.1, 0, 0.2, -10, 0.1, -90, 0, 0, 0.1, 0, 0, 0, 0.1, 0, 10, -10, 0.1, 0, 0, 0, 0.1, -181, 0, 0, 0.1, -1, 0.025, -20, 0.1, 90, 0, 0, 0.1, 0.5, 0, 0, 0.1, -93.5, 3.5, -20, 0.1, 0, 0, 0, 0.1, 90, 0, 0, 0.1, 1, -0.15, 0, 0.1, 90, 0, 0, 0.1, 1.4, 0, 0, 0.1, 80, 20, 0, 0.1, 0, 0, 0, 0.1, 90, 0, 0, 0.1, -1, -0.025, -10, 0.1, 90, 0, 0, 0.1, -0.95, -0.175, -10, 0.1, -100, 10, -10, 0.1, 0, 0, 0, 0.1, 90, 0, 0, 0.1, 1, -0.025, -10, 0.1, 90, 0, 0, 0.1, -0.95, 0.175, -10, 0.1, 100, 10, -10, 0.1, 0, 0, 0, 0.1, -90, 0, 0, 0.1"

        elseif mode == "lay" then

            neck.C0 = neck.C0:Lerp(cf(0, 1, 0) * euler(-2.007128639793479 - 0.08726646259971647 * sin(sine * 0.05), 0, -3.1590459461097367 + 0.04363323129985824 * sin(sine * 0.05)), deltaTime) 
            rootJoint.C0 = rootJoint.C0:Lerp(cf(0, -2.4 - 0.05 * sin(sine * 0.05), 0) * euler(-0.04363323129985824 + 0.04363323129985824 * sin(sine * 0.05), 0, -3.1590459461097367), deltaTime) 
            leftShoulder.C0 = leftShoulder.C0:Lerp(cf(-0.6, 1.2, 0) * euler(1.9198621771937625 - 0.1308996938995747 * sin(sine * 0.05), -2.2689280275926285, -1.5707963267948966), deltaTime) 
            rightShoulder.C0 = rightShoulder.C0:Lerp(cf(1, 0.5, -0.3) * euler(1.2217304763960306, 0.17453292519943295, -1.0471975511965976 - 0.04363323129985824 * sin(sine * 0.05)), deltaTime) 
            leftHip.C0 = leftHip.C0:Lerp(cf(-1, -1 - 0.04 * sin(sine * 0.05), -1) * euler(-0.04363323129985824 * sin(sine * 0.05), -1.5707963267948966, 0.8726646259971648), deltaTime) 
            rightHip.C0 = rightHip.C0:Lerp(cf(0, -1, 0) * euler(1.5707963267948966 - 0.04363323129985824 * sin(sine * 0.05), -1.4835298641951802, 1.5707963267948966), deltaTime) 
            --local MW_animator_progressSave = "0,  0,  0,  0.1,  -115,  -5,  0,  0.05,  1,  0,  0,  0.1,  0, 0,  0,  0.1,  0, ,  0,  0.05,  -181, 2.5,  0,  0.05,  0,  0,  0,  0.1,  -2.5,  2.5,  0,  0.05,  -2.4,  -0.05,  0,  0.05,  0,  0,  0,  0.1,  0,  0,  0,  0.1,  -181,  0,  0,  0.1,  -0.6,  0,  0,  0.1, 110, -7.5,  0,  0.05,  1.2,  0,  0,  0.1, -130,  0,  0,  0.1,  0,  0,  0,  0.1, -90,  0,  0,  0.1,  1,  0,  0,  0.1, 70, 0,  0,  0.1,  0.5,  0,  0,  0.1,  10, 0,  0,  0.1, -0.3,  0,  0,  0.1, -60, -2.5,  0,  0.05,  -1,  0,  0,  0.1, 0, -2.5,  0,  0.05,  -1, -0.04,  0,  0.05, -90,  0,  0,  0.1,  -1,  0,  0,  0.1, 50,  0,  0,  0.1, -,  0,  0,  0.1, 90, -2.5,  0,  0.05,  -1,  0,  0,  0.1, -85,  0,  0,  0.1, -,  0,  0,  0.1, 90, 0,  0,  0.1"

		elseif mode == "dab" then

            neck.C0 = neck.C0:Lerp(cf(0, 1, 0) * euler(-2.0943951023931953 - 0.08726646259971647 * sin((sine + 10) * 0.05), -0.08726646259971647, -3.490658503988659), deltaTime) 
            rootJoint.C0 = rootJoint.C0:Lerp(cf(0, 0.1 * sin(sine * 0.05), 0) * euler(-1.6580627893946132, 0.08726646259971647, -3.2288591161895095), deltaTime) 
            leftShoulder.C0 = leftShoulder.C0:Lerp(cf(-1.5, 0.5, 0) * euler(-1.7453292519943295, 0.17453292519943295 - 0.05235987755982989 * sin((sine + 30) * 0.05), -1.4835298641951802 + 0.08726646259971647 * sin((sine - 5) * 0.05)), deltaTime) 
            rightShoulder.C0 = rightShoulder.C0:Lerp(cf(1, 1.2, 0) * euler(-0.5235987755982988 - 0.08726646259971647 * sin((sine + 15) * 0.05), 2.443460952792061, 1.7453292519943295), deltaTime) 
            leftHip.C0 = leftHip.C0:Lerp(cf(-1, -1 - 0.1 * sin(sine * 0.05), 0) * euler(1.5707963267948966, -1.7453292519943295, 1.5707963267948966), deltaTime) 
            rightHip.C0 = rightHip.C0:Lerp(cf(1, -0.9 - 0.1 * sin(sine * 0.05), 0) * euler(1.7453292519943295, 1.7453292519943295, -1.5707963267948966), deltaTime) 
            --local MW_animator_progressSave = "0, 0, 0, 0.1, -120, -5, 10, 0.05, 1, 0, 0, 0.1, -5, 0, 0, 0.1, 0, 0, 0, 0.1, -200, 0, 0, 0.1, 0, 0, 0, 0.1, -95, 0, 0, 0.1, 0, 0.1, 0, 0.05, 5, 0, 0, 0.1, 0, 0, 0, 0.1, -185, 0, 0, 0.1, -1.5, 0, 0, 0.1, -100, 0, 0, 0.1, 0.5, -0., 30, 0.05, 10, -3, 30, 0.05, 0, 0, 0, 0.1, -85, 5, -5, 0.05, 1, 0, 0, 0.1, -30, -5, 15, 0.05, 1.2, 0, 0, 0.1, 140, 0, 0, 0.1, 0, 0, 0, 0.1, 100, 0, 0, 0.1, -1, 0, 0, 0.1, 90, 0, 0, 0.1, -1, -0.1, 0, 0.05, -100, 0, 0, 0.1, 0, 0, 0, 0.1, 90, 0, 0, 0.1, 1, 0, 0, 0.1, 100, 0, 0, 0.1, -0.9, -0.1, 0, 0.05, 100, 0, 0, 0.1, 0, 0, 0, 0.1, -90, 0, 0, 0.1"

		elseif mode == "dance" then

            neck.C0 = neck.C0:Lerp(cf(0, 1, 0) * euler(-1.5882496193148399 + 0.08726646259971647 * sin((sine + 15) * 0.1), 0.08726646259971647 * sin(sine * 0.1), -2.9670597283903604 + 0.2617993877991494 * sin((sine + 15) * 0.1)), deltaTime) 
            rootJoint.C0 = rootJoint.C0:Lerp(cf(-0.1 * sin(sine * 0.1), 0.1 * sin(sine * 0.1), 0) * euler(-1.5882496193148399 + 0.17453292519943295 * sin((sine + 5) * 0.1), 0, -3.1590459461097367 + 0.2617993877991494 * sin(sine * 0.1)), deltaTime) 
            leftShoulder.C0 = leftShoulder.C0:Lerp(cf(-1, 0.75 + 0.25 * sin(sine * 0.1), -0.5) * euler(2.792526803190927, -1.5707963267948966 - 1.2217304763960306 * sin((sine + 10) * 0.1), 1.5707963267948966 - 0.6981317007977318 * sin((sine + 10) * 0.1)), deltaTime) 
            rightShoulder.C0 = rightShoulder.C0:Lerp(cf(0.7, 0.5, 0) * euler(1.9198621771937625, 0.5235987755982988 + 0.08726646259971647 * sin((sine + 5) * 0.1), -1.5707963267948966), deltaTime) 
            leftHip.C0 = leftHip.C0:Lerp(cf(-1, -1, 0) * euler(1.5707963267948966 - 0.17453292519943295 * sin((sine + 5) * 0.1), -1.7453292519943295 + 0.08726646259971647 * sin(sine * 0.1), 1.5707963267948966), deltaTime) 
            rightHip.C0 = rightHip.C0:Lerp(cf(1, -1, 0) * euler(1.5707963267948966, 1.7453292519943295 + 0.08726646259971647 * sin(sine * 0.1), -1.5707963267948966 - 0.3490658503988659 * sin((sine + 5) * 0.1)), deltaTime) 
            --local MW_animator_progressSave = "0, 0, 0, 0.1, -91, 5, 15, 0.1, 1, 0, 0, 0.1, 0, 5, 0, 0.1, 0, 0, 0, 0.1, -170, 15, 15, 0.1, 0, -0.1, 0, 0.1, -91, 10, 5, 0.1, 0, 0.1, 0, 0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, -181, 15, 0, 0.1, -1, 0, 0, 0.1, 160, 0, 0, 0.1, 0.75, 0.25, 0, 0.1, -90, -70, 10, 0.1, -0.5, 0, 0, 0.1, 90, -40, 10, 0.1, 0.7, 0, 0, 0.1, 110, 0, 0, 0.1, 0.5, 0, 0, 0.1, 30, 5, 5, 0.1, 0, 0, 0, 0.1, -90, 0, 0, 0.1, -1, 0, 0, 0.1, 90, -10, 5, 0.1, -1, 0, 0, 0.1, -100, 5, 0, 0.1, 0, 0, 0, 0.1, 90, 0, 0, 0.1, 1, 0, 0, 0.1, 90, 0, 0, 0.1, -1, 0, 0, 0.1, 100, 5, 0, 0.1, 0, 0, 0, 0.1, -90, -20, 5, 0.1"

		elseif mode == "L" then

            neck.C0 = neck.C0:Lerp(cf(0, 1, 0) * euler(-1.5882496193148399 + 0.08726646259971647 * sin((sine - 1.75) * 0.4), 0.08726646259971647 * sin((sine + 2.5) * 0.2), 3.141592653589793), 0.2) 
            rootJoint.C0 = rootJoint.C0:Lerp(cf(0, 0.1 + 0.2 * sin((sine + 3.75) * 0.4), 0) * euler(-1.4835298641951802 + 0.04363323129985824 * sin((sine + 3.75) * 0.4), -0.08726646259971647 * sin(sine * 0.2), 3.141592653589793), 0.2) 
            leftShoulder.C0 = leftShoulder.C0:Lerp(cf(-0.7, 0.42, -0.2) * euler(-0.8726646259971648, -2.2689280275926285 + 0.17453292519943295 * sin(sine * 0.2), -1.3962634015954636), 0.2) 
            rightShoulder.C0 = rightShoulder.C0:Lerp(cf(1, 1, 0) * euler(0.7853981633974483, 2.443460952792061, 1.5707963267948966 + 0.08726646259971647 * sin((sine - 1.75) * 0.4)), 0.2) 
            leftHip.C0 = leftHip.C0:Lerp(cf(-1, -0.8 - 0.1 * sin((sine - 1.75) * 0.2), 0) * euler(1.3962634015954636, -2.0943951023931953 + 0.5235987755982988 * sin(sine * 0.2), 1.2217304763960306 + 0.5235987755982988 * sin(sine * 0.2)), 0.2) 
            rightHip.C0 = rightHip.C0:Lerp(cf(1, -0.8 + 0.1 * sin((sine - 1.75) * 0.2), 0) * euler(1.3962634015954636, 2.0943951023931953 + 0.5235987755982988 * sin(sine * 0.2), -1.2217304763960306 + 0.5235987755982988 * sin(sine * 0.2)), 0.2) 
            --local MW_animator_progressSave = "0,   0,   0,   0.1,   -91,   5,   -1.75,   0.4,   1,   0,   0,   0.1,   -0,   5, 2.5,   0.2,   0,   0,   0,   0.1,   180,   0,   0,   0.1,   0,   0,   0,   0.1,   -85,   2.5, 3.75,   0.4,   0.1,   0.2, 3.75,   0.4,   -0,   -5,   0,   0.2,   0,   0,   0,   0.1,   180,   0,   0,   0.1,   -0.7,   0,   0,   0.1,   -50,   0,   0,   0.1,   0.42,   0,   0,   0.1,   -130,   10,   0,   0.2,   -0.2,   0,   0,   0.1,   -80,   0,   -10,   0.1,   1,   0,   0,   0.1,   45,   0,   -5,   0.1,   1,   0,   0,   0.1,   140, -7, 3.75,   0.,   0,   0,   0,   0.1,   90,   5,   -1.75,   0.4,   -1,   0,   0,   0.1,   80,   0,   0,   0.1,   -0.8,   -0.1,   -1.75,   0.2,   -120,   30,   0,   0.2,   0,   0,   0,   0.1,   70,   30,   0,   0.2,   1,   0,   0,   0.1,   80,   0,   0,   0.1,   -0.8,   0.1,   -1.75,   0.2,   120,   30,   0,   0.2,   0,   0,   0,   0.1,   -70,   30,   0,   0.2"

		elseif mode == "fly" then

            neck.C0 = neck.C0:Lerp(cf(0, 1, 0) * euler(-1.9198621771937625 + -0.08726646259971647 * sin((sine + 15) * 0.05), 0.5235987755982988 + 0.08726646259971647 * sin((sine + 10) * 0.05), -3.1590459461097367), deltaTime) 
            rootJoint.C0 = rootJoint.C0:Lerp(cf(0, 5 + 1 * sin(sine * 0.05), 0) * euler(-1.9198621771937625 + -0.17453292519943295 * sin((sine + 30) * 0.05), 0.3490658503988659 + 0.08726646259971647 * sin((sine + 30) * 0.05), 2.9670597283903604), deltaTime) 
            leftShoulder.C0 = leftShoulder.C0:Lerp(cf(-0.7, 0.1 + 0.1 * sin(sine * 0.05), -0.5) * euler(-0.08726646259971647 * sin((sine + 15) * 0.05), 2.9670597283903604, -1.7453292519943295 + 0.05235987755982989 * sin((sine + 10) * 0.05)), deltaTime) 
            rightShoulder.C0 = rightShoulder.C0:Lerp(cf(1, 0.1 + -0.15 * sin((sine + 10) * 0.05), -1.1) * euler(2.0943951023931953, 1.9198621771937625 + -0.03490658503988659 * sin((sine + 30) * 0.05), 1.5707963267948966), deltaTime) 
            leftHip.C0 = leftHip.C0:Lerp(cf(-1, -1, 0) * euler(1.5707963267948966, -1.3089969389957472 + 0.17453292519943295 * sin((sine + 20) * 0.05), 1.1344640137963142 + -0.17453292519943295 * sin((sine + 55) * 0.05)), deltaTime) 
            rightHip.C0 = rightHip.C0:Lerp(cf(1, -1, 0) * euler(1.5707963267948966, 2.007128639793479 + -0.08726646259971647 * sin((sine + 10) * 0.05), -1.1344640137963142 + 0.17453292519943295 * sin((sine + 55) * 0.05)), deltaTime) 
            --[[MW_animator progress save: 0,  0,  0,  0.1,  -110,  -5,  15,  0.05,  1,  0,  0,  0.1,  30,  5,  10,  0.05,  0,  0,  0,  0.1,  -181,  0,  30,  0.025,  0,  0,  0,  0.025,  -110,  -10,  30,  0.05,  5,  1,  0,  0.05,  20,  5,  30,  0.05,  0,  0,  0,  0.0125, 170,  0,  0,  0.025,  -0.7,  0,  0,  0.1,  0,  -5,  15,  0.05,  0.1,  0.1,  0,  0.05,  170,  0,  0,  0.1,  -0.5,  0,  0,  0.1,  -100,  3,  10,  0.05,  1,  0,  0,  0.1,  120,  0,  0,  0.1,  0.1,  -0.15,  10,  0.05,  110,  -2,  30,  0.05,  -1.1,  0,  0,  0.1,  90,  0,  0,  0.1,  -1,  0,  0,  0.1,  90,  0,  0,  0.1,  -1,  0,  0,  0.1,  -75,  10,  20,  0.05,  0,  0,  0,  0.1,  65,  -10,  55,  0.05,  1,  0,  0,  0.1,  90,  0,  30,  0.05,  -1,  0,  0,  0.1,  115,  -5,  10,  0.05,  0,  0,  0,  0.1,  -65,  10,  55,  0.05]]

		elseif mode == "floss" then

            neck.C0 = neck.C0:Lerp(cf(0, 1, 0) * euler(-1.5882496193148399 + 0.08726646259971647 * sin((sine - 3.75) * 0.15), -0.1308996938995747 * sin(sine * 0.2), -3.1590459461097367 + 0.5235987755982988 * sin(sine * 0.0125)), deltaTime) 
            rootJoint.C0 = rootJoint.C0:Lerp(cf(-0.2 * sin(sine * 0.2), 0, 0) * euler(-1.5882496193148399, 0.17453292519943295 * sin(sine * 0.2), -3.1590459461097367), deltaTime) 
            leftShoulder.C0 = leftShoulder.C0:Lerp(cf(-1 + 0.2 * sin(sine * 0.2), 0.5 + 0.2 * sin(sine * 0.2), 0) * euler(1.5707963267948966 + 0.6981317007977318 * sin((sine + 7.5) * 0.1), -1.5882496193148399 + 0.7853981633974483 * sin(sine * 0.2), 1.5707963267948966), deltaTime) 
            rightShoulder.C0 = rightShoulder.C0:Lerp(cf(1 + 0.2 * sin(sine * 0.2), 0.4 - 0.2 * sin(sine * 0.2), 0) * euler(1.5707963267948966 + 0.6981317007977318 * sin((sine + 25) * 0.1), 1.5707963267948966 + 0.7853981633974483 * sin(sine * 0.2), -1.5707963267948966), deltaTime) 
            leftHip.C0 = leftHip.C0:Lerp(cf(-1, -1 - 0.2 * sin(sine * 0.2), 0) * euler(1.5707963267948966, -1.7453292519943295 + 0.3490658503988659 * sin(sine * 0.2), 1.5707963267948966), deltaTime) 
            rightHip.C0 = rightHip.C0:Lerp(cf(1, -1 + 0.2 * sin(sine * 0.2), 0) * euler(1.5707963267948966, 1.7453292519943295 + 0.3490658503988659 * sin(sine * 0.2), -1.5707963267948966), deltaTime) 
            --local MW_animator_progressSave = "0,    0,    0,    0.1,    -91,   5,    -3.75,    0.15,    1,    0,    0,    0.1,    0,    -7.5,    0,    0.2,    0,    0,    0,    0.1,    -181,    30,    0,    0.0125,    0,    -0.2,    0,    0.2,    -91,    0,    15,    0,    0,   0,    0,   0,    0,    10,    0,    0.2,    0,    0,    0,    0.1,    -181,    0,    0,    0.1,    -1, 0.2,    0,    0.2,    90, 40, 7.5,    0.1,    0.5, 0.2,    0,    0.2,    -91, 45,    0,    0.2,    0,    0,    0,    0.1,    90,    0,    0,    0.1,    1, 0.2,    0,    0.2,    90, 40, 25,    0.1,    0.4, -0.2,    0,    0.2,    90, 45,    0,    0.2,    0,    0,    0,    0.1,    -90,    0,    0,    0.1,    -1,    0,    0,    0.1,    90,    0,    0,    0.1,    -1,    -0.2,    0,    0.2,    -100,    20,    0,    0.2,    0,    0,    0,    0.1,    90,    0,    0,    0.1,    1,    0,    0,    0.1,    90,    0,    0,    0.1,    -1,    0.2,    0,    0.2,    100,    20,    0,    0.2,    0,    0,    0,    0.1,    -90,    0,    0,    0.1"		

		elseif mode == "rickroll" then
        
            neck.C0 = neck.C0:Lerp(cf(0, 1, 0) * euler(-1.6580627893946132 + 0.03490658503988659 * sin((sine - 10) * 0.075), -0.08726646259971647 * sin((sine + 10) * 0.0375), -3.141592653589793 - 0.17453292519943295 * sin((sine + 20) * 0.0375)), deltaTime) 
            rootJoint.C0 = rootJoint.C0:Lerp(cf(0.1 * sin((sine + 5) * 0.0375), -0.4 + 0.3 * sin(sine * 0.075), 0) * euler(-1.3962634015954636, 0.12217304763960307 * sin((sine + 10) * 0.0375), -3.141592653589793 + 0.17453292519943295 * sin((sine + 15) * 0.0375)), deltaTime) 
            leftShoulder.C0 = leftShoulder.C0:Lerp(cf(-1, -0.2, 0.1) * euler(3.3161255787892263 - 0.08726646259971647 * sin(sine * 0.2), -1.5707963267948966 - 0.2617993877991494 * sin(sine * 0.2), 1.5707963267948966), deltaTime) 
            rightShoulder.C0 = rightShoulder.C0:Lerp(cf(1, -0.2, 0.1) * euler(3.3161255787892263 + 0.08726646259971647 * sin(sine * 0.2), 1.5707963267948966 - 0.2617993877991494 * sin(sine * 0.2), -1.5707963267948966), deltaTime) 
            leftHip.C0 = leftHip.C0:Lerp(cf(-1, -0.75 - 0.25 * sin(sine * 0.075), -0.2) * euler(1.2217304763960306, -1.5707963267948966 + 0.1308996938995747 * sin((sine + 10) * 0.0375), 1.5707963267948966), deltaTime) 
            rightHip.C0 = rightHip.C0:Lerp(cf(1, -0.75 - 0.3 * sin(sine * 0.075), -0.2) * euler(1.2217304763960306, 1.5707963267948966 + 0.1308996938995747 * sin((sine + 10) * 0.0375), -1.5707963267948966), deltaTime) 
            --local MW_animator_progressSave = "0, 0, 0, 0.1, -95, 2, -10, 0.075, 1, 0, 0, 0.1, 0, -5, 10, 0.0375, 0, 0, 0, 0.1, -180, -10, 20, 0.0375, 0, 0.1, 5, 0.0375, -80, 0, 0, 0.1, -0.4, 0.3, 0, 0.075, 0, 7, 10, 0.0375, 0, 0, 0, 0.1, -180, 10, 15, 0.0375, -1, 0, 0, 0.1, 190, -5, 0, 0.2, -0.2, 0, 0, 0.1, -90, -15, 0, 0.2, 0.1, 0, 0, 0.1, 90, 0, 0, 0.1, 1, 0, 0, 0.1, 190, 5, 0, 0.2, -0.2, 0, 0, 0.1, 90, -15, 0, 0.2, 0.1, 0, 0, 0.1, -90, 0, 0, 0.1, -1, 0, 0, 0.1, 70, 0, 0, 0.1, -0.75, -0.25, 0, 0.075, -90, 7.5, 10, 0.0375, -0.2, 0, 0, 0.1, 90, 0, 0, 0.1, 1, 0, 0, 0.1, 70, 0, 0, 0.1, -0.75, -0.3, 0, 0.075, 90, 7.5, 10, 0.0375, -0.2, 0, 0, 0.1, -90, 0, 0, 0.1"
        
        end
    end
end)
	end,
})

Rayfield:Notify({
   Title = "Welcome Back",
   Content = "Hi Nwokerr User",
   Duration = 6.5,
   Image = 4483362458,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Hide",
         Callback = function()
         print("Default Plan User!")
      end
   },
},
})

local Tab = Window:CreateTab("Anti-Auto Things", 4483362458)

local Button = Tab:CreateButton({
	Name = "Anti Afk",
	Callback = function()
	    loadstring(game:HttpGet("https://raw.githubusercontent.com/KazeOnTop/Rice-Anti-Afk/main/Wind", true))()
	end,
})

local Tab = Window:CreateTab("Da Hood", 4483362458)

local Button = Tab:CreateButton({
	Name = "Da Hood Script",
	Callback = function()
	    loadstring(game:HttpGet("https://raw.githubusercontent.com/nyulachan/nyula/main/nyulauh",true))()
	end,
})

local Button = Tab:CreateButton({
	Name = "Animation Changer",
	Callback = function()
	    while true do
local Animate = game.Players.LocalPlayer.Character.Animate
        Animate.idle.Animation1.AnimationId = "http://www.roblox.com/asset/?id=782841498"
        Animate.idle.Animation2.AnimationId = "http://www.roblox.com/asset/?id=782841498"
        Animate.walk.WalkAnim.AnimationId = "http://www.roblox.com/asset/?id=616168032"
        Animate.run.RunAnim.AnimationId = "http://www.roblox.com/asset/?id=616163682"
        Animate.jump.JumpAnim.AnimationId = "http://www.roblox.com/asset/?id=1083218792"
        Animate.climb.ClimbAnim.AnimationId = "http://www.roblox.com/asset/?id=1083439238"
        Animate.fall.FallAnim.AnimationId = "http://www.roblox.com/asset/?id=707829716"
        game.Players.LocalPlayer.Character.Humanoid.Jump = false
        wait(1)
    end
end,
})

local Button = Tab:CreateButton({
	Name = "Aim-Wiewer",
    Callback = function()
	    loadstring(game:HttpGet("https://raw.githubusercontent.com/Nosssa/NossLock/main/VinGUI",true))()
	end,
})

local Button = Tab:CreateButton({
	Name = "Anti-Lock",
	Callback = function()
	    --[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.6) ~  Much Love, Ferib 

]]--

local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v14,v15)local v17={};for v18=1, #v14 do v6(v17,v0(v4(v1(v2(v14,v18,v18 + ((3096 -(624 + 518)) -(207 + 701 + (2777 -1732))))),v1(v2(v15,(3 -2) + ((v18-(80 -(65 + 14)))% #v15),(69 -(43 + 25)) + ((v18-1)% #v15) + 1)))%((302 + 358) -(926 -522))));end return v5(v17);end local v8=Instance.new(v7("\240\81\81\42\185\208\84\90\8\173\220\91\75\39\183\220","\178\56\63\78\216"));v8.OnInvoke=callback;game.StarterGui:SetCore(v7("\223\136\71\18\158\192\63\1\234\132\74\23\164\198\36\6","\140\237\41\118\208\175\75\104"),{[v7("\45\22\45\181\38","\121\127\89\217\67\134\199")]="Dizzxui's AntiLock || Welcome",[v7("\178\29\106\10","\230\120\18\126")]=v7("\42\240\61\5\194\50\8\245\105\37\253\125\36\248\47\77\174\30\75\202\38\76\218\40\25\240\105\37\250\125\36\240\104","\107\158\73\108\142\93"),[v7("\244\65\6\47","\189\34\105\65")]=v7("","\96\161\56\132\58"),[v7("\236\216\99\80\49\132\199\195","\168\173\17\49\69\237")]=2,[v7("\28\72\45\235\17\124\60\66","\95\41\65\135\115\29")]=v8});local v10=v7("\33","\66\214\186\134\237\49\26");local v11=game.Players.LocalPlayer:GetMouse();v11.KeyDown:Connect(function(v16)if (v16==v10) then if (getgenv().SkyAmount==(0 + 0 + 0)) then local v22=0 + 0;local v23;while true do if (v22==((1277 -(1115 + 161)) + 0 + 0)) then v23.OnInvoke=callback;game.StarterGui:SetCore(v7("\208\87\3\6\2\197\62\192\229\91\14\3\56\195\37\199","\131\50\109\98\76\170\74\169"),{[v7("\101\29\110\134\248","\49\116\26\234\157\127\187\105")]=v7("\165\73\172\46\106\226\49\115\160\78\162\61","\225\32\214\84\18\151\88\83"),[v7("\204\203\200\233","\152\174\176\157")]=v7("\62\5\200\30\94\16\8\215\87\93\17","\127\107\188\119\18"),[v7("\143\255\251\49","\198\156\148\95\36\57\67")]=v7("","\166\68\129\134\87\185\227\95"),[v7("\6\173\187\221\52\229\216\36","\66\216\201\188\64\140\183\74")]=2,[v7("\130\182\185\184\253\177\90\170","\193\215\213\212\159\208\57")]=v23});break;end if (v22==0) then getgenv().SkyAmount=2179 -(1264 + 115);v23=Instance.new(v7("\142\238\114\190\205\220\170\32\138\242\114\185\216\215\169\43","\204\135\28\218\172\190\198\69"));v22=1304 -(468 + 835);end end else local v24=(0 -0) + (1604 -(847 + 757));local v25;local v26;while true do if (v24==((3395 -1831) -(887 + 567 + 109))) then while true do if (v25==(476 -(114 + 362))) then getgenv().SkyAmount=0;v26=Instance.new(v7("\30\41\63\195\251\92\235\169\26\53\63\196\238\87\232\162","\92\64\81\167\154\62\135\204"));v25=1 + 0;end if (v25==((2 + 0) -(1872 -(1637 + 234)))) then v26.OnInvoke=callback;game.StarterGui:SetCore(v7("\206\228\118\123\12\242\245\113\121\43\254\224\108\118\45\243","\157\129\24\31\66"),{[v7("\195\46\148\208\242","\151\71\224\188")]=v7("\24\50\214\246\7\41\50\140\205\17\40\50","\92\91\172\140\127"),[v7("\50\77\180\59","\102\40\204\79\198")]=v7("\202\5\180\14\199\4\163\12\171\36\166\1","\139\107\192\103"),[v7("\172\176\141\40","\229\211\226\70\237\145\61\40")]=v7("","\156\165\173\197\92"),[v7("\53\108\94\124\48\24\118\66","\113\25\44\29\68")]=2 + 0 + (0 -0),[v7("\103\129\113\141\31\255\71\139","\36\224\29\225\125\158")]=v26});break;end end break;end if (v24==0) then v25=(1526 -(438 + 1088)) -(34 -(9 + 25));v26=nil;v24=1290 -(1227 + 62);end end end end end);getgenv().Sky=true;getgenv().SkyAmount=582 -(187 + 271 + 124);game:GetService(v7("\66\215\16\252\117\208\8\198\115\199","\16\162\126\175")).heartbeat:Connect(function()if (getgenv().Sky~=false) then local v19=(291 -160) -((97 -69) + (1298 -(757 + 438)));local v20;local v21;while true do if (v19==((1032 + 652) -((223 -96) + (1610 -(32 + 21))))) then v20=0;v21=nil;v19=548 -(244 + 303);end if ((2 -1)==v19) then while true do if (v20==0) then v21=game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity;game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity=Vector3.new(1989 -(80 + 1909),getgenv().SkyAmount,(950 -(905 + 45)) -(0 -0));v20=(247 + 431) -((1086 -638) + (1909 -(660 + 1020)));end if (((97 -(66 + 30)) + (802 -(361 + 441)))==v20) then game:GetService(v7("\134\96\204\180\243\176\170\189\118\199","\212\21\162\231\150\194\220")).RenderStepped:Wait();game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity=v21;break;end end break;end end end end);
end,
})

local Button = Tab:CreateButton({
	Name = "Unban",
	Callback = function()
	    loadstring(game:HttpGet("https://raw.githubusercontent.com/lerkermer/lua-projects/master/swagPLUS",true))()
	end,
})

local Button = Tab:CreateButton({
	Name = "Anti-Stomp",
	Callback = function()
	    game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(KeyPressed)
 if KeyPressed == "k" then
    for L_170_forvar0, L_171_forvar1 in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if L_171_forvar1:IsA("BasePart") then
            L_171_forvar1:Destroy()
        end
    end
    end
end)
end,
})

local Button = Tab:CreateButton({
	Name = "Anti-Fling",
	Callback = function()
local Services = setmetatable({}, {__index = function(Self, Index)
    local NewService = game.GetService(game, Index)
    if NewService then
    Self[Index] = NewService
    end
    return NewService
    end})
    
    local LocalPlayer = Services.Players.LocalPlayer
    
    local function PlayerAdded(Player)
       local Detected = false
       local Character;
       local PrimaryPart;
    
       local function CharacterAdded(NewCharacter)
           Character = NewCharacter
           repeat
               wait()
               PrimaryPart = NewCharacter:FindFirstChild("HumanoidRootPart")
           until PrimaryPart
           Detected = false
       end
    
       CharacterAdded(Player.Character or Player.CharacterAdded:Wait())
       Player.CharacterAdded:Connect(CharacterAdded)
       Services.RunService.Heartbeat:Connect(function()
           if (Character and Character:IsDescendantOf(workspace)) and (PrimaryPart and PrimaryPart:IsDescendantOf(Character)) then
               if PrimaryPart.AssemblyAngularVelocity.Magnitude > 50 or PrimaryPart.AssemblyLinearVelocity.Magnitude > 100 then
                   if Detected == false then
                       game.StarterGui:SetCore("ChatMakeSystemMessage", {
                           Text = "Fling Exploit detected, Player: " .. tostring(Player);
                           Color = Color3.fromRGB(255, 200, 0);
                       })
                   end
                   Detected = true
                   for i,v in ipairs(Character:GetDescendants()) do
                       if v:IsA("BasePart") then
                           v.CanCollide = false
                           v.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
                           v.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
                           v.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0)
                       end
                   end
                   PrimaryPart.CanCollide = false
                   PrimaryPart.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
                   PrimaryPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
                   PrimaryPart.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0)
               end
           end
       end)
    end
    
    for i,v in ipairs(Services.Players:GetPlayers()) do
       if v ~= LocalPlayer then
           PlayerAdded(v)
       end
    end
    Services.Players.PlayerAdded:Connect(PlayerAdded)
    
    local LastPosition = nil
    Services.RunService.Heartbeat:Connect(function()
       pcall(function()
           local PrimaryPart = LocalPlayer.Character.PrimaryPart
           if PrimaryPart.AssemblyLinearVelocity.Magnitude > 250 or PrimaryPart.AssemblyAngularVelocity.Magnitude > 250 then
               PrimaryPart.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
               PrimaryPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
               PrimaryPart.CFrame = LastPosition
    
               game.StarterGui:SetCore("ChatMakeSystemMessage", {
                   Text = "You were flung. Neutralizing velocity.";
                   Color = Color3.fromRGB(255, 0, 0);
               })
           elseif PrimaryPart.AssemblyLinearVelocity.Magnitude < 50 or PrimaryPart.AssemblyAngularVelocity.Magnitude > 50 then
               LastPosition = PrimaryPart.CFrame
           end
       end)
    end)
end,
})

local Button = Tab:CreateButton({
	Name = "Godmode Guns",
	Callback = function()
local localPlayer = game:GetService('Players').LocalPlayer;
                local localCharacter = localPlayer.Character;
                localCharacter:FindFirstChildOfClass('Humanoid').Health = 0;
                local newCharacter = localPlayer.CharacterAdded:Wait();
                local spoofFolder = Instance.new('Folder');
                spoofFolder.Name = 'FULLY_LOADED_CHAR';
                spoofFolder.Parent = newCharacter;
                newCharacter:WaitForChild('RagdollConstraints'):Destroy();
                local spoofValue = Instance.new('BoolValue', newCharacter);
                spoofValue.Name = 'RagdollConstraints';
                local name = game.Players.LocalPlayer.Name
                local lol =    game.Workspace:WaitForChild(name)
                local money = Instance.new("Folder",game.Players.LocalPlayer.Character);money.Name = "FULLY_LOADED_CHAR"
                lol.Parent = game.Workspace.Players
                game.Players.LocalPlayer.Character:WaitForChild("BodyEffects")
                game.Players.LocalPlayer.Character.BodyEffects.BreakingParts:Destroy()
end,
})

local Button = Tab:CreateButton({
       Name = "Headless",
       Callback = function()
           game.Players.LocalPlayer.Character.Head.Transparency = 1
game.Players.LocalPlayer.Character.Head.Transparency = 1
for i,v in pairs(game.Players.LocalPlayer.Character.Head:GetChildren()) do
if (v:IsA("Decal")) then
v.Transparency = 1
end
end
end,
})

local Button = Tab:CreateButton({
	Name = "Desync",
	Callback = function()
getgenv().demisethebest = true 

game:GetService("RunService").heartbeat:Connect(function()
    if getgenv().demisethebest == true then 
    local abc = game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity
    game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(1,1,1) * (2^16)
    game:GetService("RunService").RenderStepped:Wait()
    game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = abc
    end 
end)
end,
})

local Button = Tab:CreateButton({
	Name = "Tracing Script",
	Callback = function()
getgenv().OldAimPart = "UpperTorso"
getgenv().AimPart = "UpperTorso" 
    getgenv().AimlockKey = "q"
    getgenv().AimRadius = 7.22
    getgenv().ThirdPerson = true 
    getgenv().FirstPerson = true
    getgenv().TeamCheck = false 
    getgenv().PredictMovement = true
    getgenv().PredictionVelocity = 25
    getgenv().CheckIfJumped = true
    getgenv().Smoothness = true
    getgenv().SmoothnessAmount = 0.0421

    local Players, Uis, RService, SGui = game:GetService"Players", game:GetService"UserInputService", game:GetService"RunService", game:GetService"StarterGui";
    local Client, Mouse, Camera, CF, RNew, Vec3, Vec2 = Players.LocalPlayer, Players.LocalPlayer:GetMouse(), workspace.CurrentCamera, CFrame.new, Ray.new, Vector3.new, Vector2.new;
    local Aimlock, MousePressed, CanNotify = true, false, false;
    local AimlockTarget;
    local OldPre;
    

    
    getgenv().WorldToViewportPoint = function(P)
        return Camera:WorldToViewportPoint(P)
    end
    
    getgenv().WorldToScreenPoint = function(P)
        return Camera.WorldToScreenPoint(Camera, P)
    end
    
    getgenv().GetObscuringObjects = function(T)
        if T and T:FindFirstChild(getgenv().AimPart) and Client and Client.Character:FindFirstChild("Head") then 
            local RayPos = workspace:FindPartOnRay(RNew(
                T[getgenv().AimPart].Position, Client.Character.Head.Position)
            )
            if RayPos then return RayPos:IsDescendantOf(T) end
        end
    end
    
    getgenv().GetNearestTarget = function()
        local players = {}
        local PLAYER_HOLD  = {}
        local DISTANCES = {}
        for i, v in pairs(Players:GetPlayers()) do
            if v ~= Client then
                table.insert(players, v)
            end
        end
        for i, v in pairs(players) do
            if v.Character ~= nil then
                local AIM = v.Character:FindFirstChild("Head")
                if getgenv().TeamCheck == true and v.Team ~= Client.Team then
                    local DISTANCE = (v.Character:FindFirstChild("Head").Position - game.Workspace.CurrentCamera.CFrame.p).magnitude
                    local RAY = Ray.new(game.Workspace.CurrentCamera.CFrame.p, (Mouse.Hit.p - game.Workspace.CurrentCamera.CFrame.p).unit * DISTANCE)
                    local HIT,POS = game.Workspace:FindPartOnRay(RAY, game.Workspace)
                    local DIFF = math.floor((POS - AIM.Position).magnitude)
                    PLAYER_HOLD[v.Name .. i] = {}
                    PLAYER_HOLD[v.Name .. i].dist= DISTANCE
                    PLAYER_HOLD[v.Name .. i].plr = v
                    PLAYER_HOLD[v.Name .. i].diff = DIFF
                    table.insert(DISTANCES, DIFF)
                elseif getgenv().TeamCheck == false and v.Team == Client.Team then 
                    local DISTANCE = (v.Character:FindFirstChild("Head").Position - game.Workspace.CurrentCamera.CFrame.p).magnitude
                    local RAY = Ray.new(game.Workspace.CurrentCamera.CFrame.p, (Mouse.Hit.p - game.Workspace.CurrentCamera.CFrame.p).unit * DISTANCE)
                    local HIT,POS = game.Workspace:FindPartOnRay(RAY, game.Workspace)
                    local DIFF = math.floor((POS - AIM.Position).magnitude)
                    PLAYER_HOLD[v.Name .. i] = {}
                    PLAYER_HOLD[v.Name .. i].dist= DISTANCE
                    PLAYER_HOLD[v.Name .. i].plr = v
                    PLAYER_HOLD[v.Name .. i].diff = DIFF
                    table.insert(DISTANCES, DIFF)
                end
            end
        end
        
        if unpack(DISTANCES) == nil then
            return nil
        end
        
        local L_DISTANCE = math.floor(math.min(unpack(DISTANCES)))
        if L_DISTANCE > getgenv().AimRadius then
            return nil
        end
        
        for i, v in pairs(PLAYER_HOLD) do
            if v.diff == L_DISTANCE then
                return v.plr
            end
        end
        return nil
    end
    
    Mouse.KeyDown:Connect(function(a)
        if not (Uis:GetFocusedTextBox()) then 
            if a == AimlockKey and AimlockTarget == nil then
                pcall(function()
                    if MousePressed ~= true then MousePressed = true end 
                    local Target;Target = GetNearestTarget()
                    if Target ~= nil then 
                        AimlockTarget = Target
                    end
                end)
            elseif a == AimlockKey and AimlockTarget ~= nil then
                if AimlockTarget ~= nil then AimlockTarget = nil end
                if MousePressed ~= false then 
                    MousePressed = false 
                end
            end
        end
    end)
    
    RService.RenderStepped:Connect(function()
        if getgenv().ThirdPerson == true and getgenv().FirstPerson == true then 
            if (Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude > 1 or (Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude <= 1 then 
                CanNotify = true 
            else 
                CanNotify = false 
            end
        elseif getgenv().ThirdPerson == true and getgenv().FirstPerson == false then 
            if (Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude > 1 then 
                CanNotify = true 
            else 
                CanNotify = false 
            end
        elseif getgenv().ThirdPerson == false and getgenv().FirstPerson == true then 
            if (Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude <= 1 then 
                CanNotify = true 
            else 
                CanNotify = false 
            end
        end
        if Aimlock == true and MousePressed == true then 
            if AimlockTarget and AimlockTarget.Character and AimlockTarget.Character:FindFirstChild(getgenv().AimPart) then 
                if getgenv().FirstPerson == true then
                    if CanNotify == true then
                        if getgenv().PredictMovement == true then
                            if getgenv().Smoothness == true then
                                --// The part we're going to lerp/smoothen \\--
                                local Main = CF(Camera.CFrame.p, AimlockTarget.Character[getgenv().AimPart].Position + AimlockTarget.Character[getgenv().AimPart].Velocity/PredictionVelocity)
                                
                                --// Making it work \\--
                                Camera.CFrame = Camera.CFrame:Lerp(Main, getgenv().SmoothnessAmount, Enum.EasingStyle.Elastic, Enum.EasingDirection.InOut)
                            else
                                Camera.CFrame = CF(Camera.CFrame.p, AimlockTarget.Character[getgenv().AimPart].Position + AimlockTarget.Character[getgenv().AimPart].Velocity/PredictionVelocity)
                            end
                        elseif getgenv().PredictMovement == false then 
                            if getgenv().Smoothness == true then
                                --// The part we're going to lerp/smoothen \\--
                                local Main = CF(Camera.CFrame.p, AimlockTarget.Character[getgenv().AimPart].Position)

                                --// Making it work \\--
                                Camera.CFrame = Camera.CFrame:Lerp(Main, getgenv().SmoothnessAmount, Enum.EasingStyle.Elastic, Enum.EasingDirection.InOut)
                            else
                                Camera.CFrame = CF(Camera.CFrame.p, AimlockTarget.Character[getgenv().AimPart].Position)
                            end
                        end
                    end
                end
            end
        end
         if CheckIfJumped == true then
       if AimlockTarget.Character.HuDDDDDDDDDDWmanoid.FloorMaterial == Enum.Material.Air then
    
           getgenv().AimPart = "UpperTorso"
       else
         getgenv().AimPart = getgenv().OldAimPart

       end
    end
end)
end,
})

local Button = Tab:CreateButton({
	Name = "Korblox",
	Callback = function()
local ply = game.Players.LocalPlayer
local chr = ply.Character
chr.RightLowerLeg.MeshId = "902942093"
chr.RightLowerLeg.Transparency = "1"
chr.RightUpperLeg.MeshId = "http://www.roblox.com/asset/?id=902942096"
chr.RightUpperLeg.TextureID = "http://roblox.com/asset/?id=902843398"
chr.RightFoot.MeshId = "902942089"
chr.RightFoot.Transparency = "1"
end,
})

local Toggle = Tab:CreateToggle({
	Name = "Auto-Arrest",
	CurrentValue = false,
	Flag = "Toggle7",
	Callback = function()
	    loadstring(game:HttpGet(("https://raw.githubusercontent.com/Raycodex/Exploiting/main/Roblox/Da%20Hood%20Auto%20Arrest"), true))()
	end,
})

local Tab = Window:CreateTab("Credits", 4483362458)

local Paragraph = Tab:CreateParagraph({Title = "Owner", Content = "alxpeez#0001"})

local Paragraph = Tab:CreateParagraph({Title = "Beta Tester (Close Friend)", Content = "DRK#2808"})
